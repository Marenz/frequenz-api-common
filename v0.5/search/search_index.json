{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Frequenz Common API","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Frequenz common gRPC API and bindings</p>"},{"location":"#contributing","title":"Contributing","text":"<p>If you want to know how to build this project and contribute to it, please check out the Contributing Guide.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to Frequenz Common API","text":""},{"location":"CONTRIBUTING/#build","title":"Build","text":"<p>You can use <code>build</code> to simply build the source and binary distribution:</p> <pre><code>python -m pip install build\npython -m build\n</code></pre>"},{"location":"CONTRIBUTING/#local-development","title":"Local development","text":"<p>You need to make sure you have the <code>git submodules</code> updated:</p> <pre><code>git submodule update --init\n</code></pre>"},{"location":"CONTRIBUTING/#running-protolint","title":"Running protolint","text":"<p>To make sure some common mistakes are avoided and to ensure a consistent style it is recommended to run <code>protolint</code>. After you installed <code>protolint</code>, just run:</p> <pre><code>protolint lint proto\n</code></pre>"},{"location":"CONTRIBUTING/#python-setup","title":"Python setup","text":"<p>You can use editable installs to develop the project locally (it will install all the dependencies too):</p> <pre><code>python -m pip install -e .\n</code></pre> <p>This will also generate the Python files from the <code>proto/</code> files and leave them in <code>py/</code>, so you can inspect them.</p> <p>Or you can install all development dependencies (<code>mypy</code>, <code>pylint</code>, <code>pytest</code>, etc.) in one go too: <pre><code>python -m pip install -e .[dev]\n</code></pre></p> <p>If you don't want to install all the dependencies, you can also use <code>nox</code> to run the tests and other checks creating its own virtual environments:</p> <pre><code>python -m pip install .[dev-noxfile]\nnox\n</code></pre> <p>You can also use <code>nox -R</code> to reuse the current testing environment to speed up test at the expense of a higher chance to end up with a dirty test environment.</p>"},{"location":"CONTRIBUTING/#upgrading-dependencies","title":"Upgrading dependencies","text":"<p>If you want to update the dependency <code>frequenz-api-common</code>, then you need to:</p> <ol> <li>Update the submodule <code>frequenz-api-common</code></li> <li>Update the version of the <code>frequenz-api-common</code> package in <code>pyproject.toml</code></li> </ol> <p>The version of <code>frequenz-api-common</code> used in both places mentioned above should be the same.</p> <p>Here is an example of upgrading the <code>frequenz-api-common</code> dependency to version <code>v0.2.0</code>: <pre><code>ver=\"0.2.0\"\n\ncd submodules/frequenz-api-common\ngit remote update\ngit checkout v${ver}\ncd -\n\nsed s/\"frequenz-api-common == [0-9]\\.[0-9]\\.[0-9]\"/\"frequenz-api-common == ${ver}\"/g -i pyproject.toml\n</code></pre></p>"},{"location":"CONTRIBUTING/#running-tests-checks-individually","title":"Running tests / checks individually","text":"<p>For a better development test cycle you can install the runtime and test dependencies and run <code>pytest</code> manually.</p> <pre><code>python -m pip install .[dev-pytest]  # included in .[dev] too\n\n# And for example\npytest tests/test_*.py\n</code></pre> <p>Or you can use <code>nox</code>:</p> <pre><code>nox -R -s pytest -- test/test_*.py\n</code></pre> <p>The same appliest to <code>pylint</code> or <code>mypy</code> for example:</p> <pre><code>nox -R -s pylint -- test/test_*.py\nnox -R -s mypy -- test/test_*.py\n</code></pre>"},{"location":"CONTRIBUTING/#building-the-documentation","title":"Building the documentation","text":"<p>To build the documentation, first install the dependencies (if you didn't install all <code>dev</code> dependencies):</p> <pre><code>python -m pip install -e .[dev-mkdocs]\n</code></pre> <p>Then you can build the documentation (it will be written in the <code>site/</code> directory):</p> <pre><code>mkdocs build\n</code></pre> <p>Or you can just serve the documentation without building it using:</p> <pre><code>mkdocs serve\n</code></pre> <p>Your site will be updated live when you change your files (provided that you used <code>pip install -e .</code>, beware of a common pitfall of using <code>pip install</code> without <code>-e</code>, in that case the API reference won't change unless you do a new <code>pip install</code>).</p> <p>To build multi-version documentation, we use mike. If you want to see how the multi-version sites looks like locally, you can use:</p> <pre><code>mike deploy my-version\nmike set-default my-version\nmike serve\n</code></pre> <p><code>mike</code> works in mysterious ways. Some basic information:</p> <ul> <li><code>mike deploy</code> will do a <code>mike build</code> and write the results to your local <code>gh-pages</code> branch. <code>my-version</code> is an arbitrary name for the local version   you want to preview.</li> <li><code>mike set-default</code> is needed so when you serve the documentation, it goes to   your newly produced documentation by default.</li> <li><code>mike serve</code> will serve the contents of your local <code>gh-pages</code> branch. Be   aware that, unlike <code>mkdocs serve</code>, changes to the sources won't be shown   live, as the <code>mike deploy</code> step is needed to refresh them.</li> </ul> <p>Be careful not to use <code>--push</code> with <code>mike deploy</code>, otherwise it will push your local <code>gh-pages</code> branch to the <code>origin</code> remote.</p> <p>That said, if you want to test the actual website in your fork, you can always use <code>mike deploy --push --remote your-fork-remote</code>, and then access the GitHub pages produced for your fork.</p>"},{"location":"CONTRIBUTING/#releasing","title":"Releasing","text":"<p>These are the steps to create a new release:</p> <ol> <li> <p>Get the latest head you want to create a release from.</p> </li> <li> <p>Update the <code>RELEASE_NOTES.md</code> file if it is not complete, up to date, and    remove template comments (<code>&lt;!-- ... -&gt;</code>) and empty sections. Submit a pull    request if an update is needed, wait until it is merged, and update the    latest head you want to create a release from to get the new merged pull    request.</p> </li> <li> <p>Create a new signed tag using the release notes and    a semver compatible version number with a <code>v</code> prefix,    for example:</p> </li> </ol> <pre><code>git tag -s --cleanup=whitespace -F RELEASE_NOTES.md v0.0.1\n</code></pre> <ol> <li> <p>Push the new tag.</p> </li> <li> <p>A GitHub action will test the tag and if all goes well it will create    a GitHub    Release,    and upload a new package to    PyPI    automatically.</p> </li> <li> <p>Once this is done, reset the <code>RELEASE_NOTES.md</code> with the template:</p> </li> </ol> <pre><code>cp .github/RELEASE_NOTES.template.md RELEASE_NOTES.md\n</code></pre> <p>Commit the new release notes and create a PR (this step should be automated    eventually too).</p> <ol> <li>Celebrate!</li> </ol>"},{"location":"SUMMARY/","title":"SUMMARY","text":"<ul> <li>Home</li> <li>Protobuf API Reference</li> <li>Python API Reference</li> <li>Contributing</li> </ul>"},{"location":"protobuf-reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>frequenz<ul> <li>api<ul> <li>common<ul> <li>v1<ul> <li>grid<ul> <li>delivery_area.proto</li> </ul> </li> <li>location.proto</li> <li>metrics<ul> <li>bounds.proto</li> <li>metric_sample.proto</li> </ul> </li> <li>microgrid<ul> <li>components<ul> <li>battery.proto</li> <li>components.proto</li> <li>ev_charger.proto</li> <li>fuse.proto</li> <li>grid.proto</li> <li>inverter.proto</li> <li>transformer.proto</li> </ul> </li> <li>lifetime.proto</li> <li>microgrid.proto</li> <li>sensors<ul> <li>sensors.proto</li> </ul> </li> </ul> </li> <li>pagination<ul> <li>pagination_info.proto</li> <li>pagination_params.proto</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"protobuf-reference/frequenz/api/common/v1/location/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/location/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/location.proto</p> <ul> <li>Location</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/location/#frequenzapicommonv1locationproto","title":"frequenz/api/common/v1/location.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/location/#location","title":"Location","text":"<p>A pair of geographical co-ordinates, representing the location of a place.</p> Field Type Label Description latitude float Latitude ranges from -90 (South) to 90 (North) longitude float Longitude ranges from -180 (West) to 180 (East) country_code string Country ISO 3166-1 Alpha 2"},{"location":"protobuf-reference/frequenz/api/common/v1/location/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/grid/delivery_area/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/grid/delivery_area/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/grid/delivery_area.proto</p> <ul> <li> <p>DeliveryArea</p> </li> <li> <p>EnergyMarketCodeType</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/grid/delivery_area/#frequenzapicommonv1griddelivery_areaproto","title":"frequenz/api/common/v1/grid/delivery_area.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/grid/delivery_area/#deliveryarea","title":"DeliveryArea","text":"<p>DeliveryArea represents the geographical or administrative region, usually defined and maintained by a Transmission System Operator (TSO), where electricity deliveries for a contract occur.</p> <p>The concept is important to energy trading as it delineates the agreed-upon delivery location. Delivery areas can have different codes based on the// jurisdiction in which they operate.</p> <p>!!! note \"Jurisdictional Differences\"     This is typically represented by specific codes according to local     jurisdiction. In Europe, this is represented by an EIC     (Energy Identification Code).</p> Field Type Label Description code string Code representing the unique identifier for the delivery area. code_type EnergyMarketCodeType Type of code used for identifying the delivery area itself. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/grid/delivery_area/#energymarketcodetype","title":"EnergyMarketCodeType","text":"<p>CodeType specifies the type of identification code used for uniquely identifying various entities such as delivery areas, market participants, and grid components within the energy market. This enumeration aims to offer compatibility across different jurisdictional standards.</p> <p>!!! note \"Understanding Code Types\"     Different regions or countries may have their own standards for uniquely     identifying various entities within the energy market. For example, in     Europe, the Energy Identification Code (EIC) is commonly used for this     purpose.</p> <p>!!! info \"Extensibility\"     New code types can be added to this enum to accommodate additional     regional standards, enhancing the API's adaptability.</p> <p>!!! caution \"Validation Required\"     The chosen code type should correspond correctly with the <code>code</code> field in     the relevant message objects, such as <code>DeliveryArea</code> or <code>Counterparty</code>.     Failure to match the code type with the correct code could lead to     processing errors.</p> Name Number Description ENERGY_MARKET_CODE_TYPE_UNSPECIFIED 0 Unspecified type. This value is a placeholder and should not be used. ENERGY_MARKET_CODE_TYPE_EUROPE_EIC 1 European Energy Identification Code Standard. ENERGY_MARKET_CODE_TYPE_US_NERC 2 North American Electric Reliability Corporation identifiers."},{"location":"protobuf-reference/frequenz/api/common/v1/grid/delivery_area/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/bounds/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/bounds/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/metrics/bounds.proto</p> <ul> <li>Bounds</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/bounds/#frequenzapicommonv1metricsboundsproto","title":"frequenz/api/common/v1/metrics/bounds.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/bounds/#bounds","title":"Bounds","text":"<p>A set of lower and upper bounds for any metric. The units of the bounds are always the same as the related metric.</p> Field Type Label Description lower float optional The lower bound. If absent, there is no lower bound. upper float optional The upper bound. If absent, there is no upper bound."},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/bounds/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/metrics/metric_sample.proto</p> <ul> <li>AggregatedMetricSample</li> <li>MetricSample</li> <li>MetricSampleVariant</li> <li> <p>SimpleMetricSample</p> </li> <li> <p>Metric</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#frequenzapicommonv1metricsmetric_sampleproto","title":"frequenz/api/common/v1/metrics/metric_sample.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#aggregatedmetricsample","title":"AggregatedMetricSample","text":"<p>Encapsulates derived statistical summaries of a single metric.</p> <p>The message allows for the reporting of statistical summaries \u2014 minimum, maximum, and average values - as well as the complete list of individual samples if available.</p> <p>This message represents derived metrics and contains fields for statistical summaries\u2014minimum, maximum, and average values. Individual measurements are are optional, accommodating scenarios where only subsets of this information are available.</p> Field Type Label Description avg_value float The derived average value of the metric. min_value float optional The minimum measured value of the metric. max_value float optional The maximum measured value of the metric. raw_values float repeated Optional array of all the raw individual values. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#metricsample","title":"MetricSample","text":"<p>Representation of a sampled metric along with its value.</p> <p>Note</p> <p>This represents a single sample of a specific metric, the value of which is either measured or derived at a particular time. The real-time system-defined bounds are optional and may not always be present or set.</p> <p>Note</p> Field Type Label Description sampled_at google.protobuf.Timestamp The UTC timestamp of when the metric was sampled. metric Metric The metric that was sampled. sample MetricSampleVariant The value of the sampled metric. bounds Bounds repeated List of bounds that apply to the metric sample. <p>These bounds adapt in real-time to reflect the operating conditions at the time of aggregation or derivation.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#relationship-between-bounds-and-metric-samples","title":"Relationship Between Bounds and Metric Samples","text":"<p>Suppose a metric sample for active power has a lower-bound of -10,000 W, and an upper-bound of 10,000 W. For the system to accept a charge command, clients need to request current values within the bounds.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#multiple-bounds","title":"Multiple Bounds","text":"<p>In the case of certain components like batteries, multiple bounds might exist. These multiple bounds collectively extend the range of allowable values, effectively forming a union of all given bounds. In such cases, the value of the metric must be within at least one of the bounds. In accordance with the passive sign convention, bounds that limit discharge would have negative numbers, while those limiting charge, such as for the State of Power (SoP) metric, would be positive. Hence bounds can have positive and negative values depending on the metric they represent.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#example","title":"Example","text":"<p>The diagram below illustrates the relationship between the bounds. <code>bound[0].lower bound[1].upper &amp;lt;-------|============|------------------|============|---------&amp;gt; bound[0].upper bound[1].lower</code> ---- values here are disallowed and will be rejected ==== values here are allowed and will be accepted |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#metricsamplevariant","title":"MetricSampleVariant","text":"<p>MetricSampleVariant serves as a union type that can encapsulate either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>.</p> <p>This message is designed to offer flexibility in capturing different granularities of metric samples\u2014either a simple single-point measurement or an aggregated set of measurements for a metric.</p> <p>A <code>MetricSampleVariant</code> can hold either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>, but not both simultaneously. Setting one will nullify the other.</p> Field Type Label Description simple_metric SimpleMetricSample aggregated_metric AggregatedMetricSample <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#simplemetricsample","title":"SimpleMetricSample","text":"<p>Represents a single sample of a specific metric, the value of which is either measured or derived at a particular time.</p> Field Type Label Description value float The value of the metric, which could be either measured or derived. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#metric","title":"Metric","text":"<p>List of supported metrics.</p> Name Number Description METRIC_UNSPECIFIED 0 Default value. METRIC_DC_VOLTAGE 1 DC electricity metrics METRIC_DC_CURRENT 2 METRIC_DC_POWER 3 METRIC_AC_FREQUENCY 10 General AC electricity metrics METRIC_AC_VOLTAGE 11 METRIC_AC_VOLTAGE_PHASE_1 12 METRIC_AC_VOLTAGE_PHASE_2 13 METRIC_AC_VOLTAGE_PHASE_3 14 METRIC_AC_APPARENT_CURRENT 15 METRIC_AC_APPARENT_CURRENT_PHASE_1 16 METRIC_AC_APPARENT_CURRENT_PHASE_2 17 METRIC_AC_APPARENT_CURRENT_PHASE_3 18 METRIC_AC_APPARENT_POWER 20 AC power metrics METRIC_AC_APPARENT_POWER_PHASE_1 21 METRIC_AC_APPARENT_POWER_PHASE_2 22 METRIC_AC_APPARENT_POWER_PHASE_3 23 METRIC_AC_ACTIVE_POWER 24 METRIC_AC_ACTIVE_POWER_PHASE_1 25 METRIC_AC_ACTIVE_POWER_PHASE_2 26 METRIC_AC_ACTIVE_POWER_PHASE_3 27 METRIC_AC_REACTIVE_POWER 28 METRIC_AC_REACTIVE_POWER_PHASE_1 29 METRIC_AC_REACTIVE_POWER_PHASE_2 30 METRIC_AC_REACTIVE_POWER_PHASE_3 31 METRIC_AC_POWER_FACTOR 40 AC Power factor METRIC_AC_POWER_FACTOR_PHASE_1 41 METRIC_AC_POWER_FACTOR_PHASE_2 42 METRIC_AC_POWER_FACTOR_PHASE_3 43 METRIC_AC_APPARENT_ENERGY 50 AC energy metrics METRIC_AC_APPARENT_ENERGY_PHASE_1 51 METRIC_AC_APPARENT_ENERGY_PHASE_2 52 METRIC_AC_APPARENT_ENERGY_PHASE_3 53 METRIC_AC_ACTIVE_ENERGY 54 METRIC_AC_ACTIVE_ENERGY_PHASE_1 55 METRIC_AC_ACTIVE_ENERGY_PHASE_2 56 METRIC_AC_ACTIVE_ENERGY_PHASE_3 57 METRIC_AC_ACTIVE_ENERGY_CONSUMED 58 METRIC_AC_ACTIVE_ENERGY_CONSUMED_PHASE_1 59 METRIC_AC_ACTIVE_ENERGY_CONSUMED_PHASE_2 60 METRIC_AC_ACTIVE_ENERGY_CONSUMED_PHASE_3 61 METRIC_AC_ACTIVE_ENERGY_DELIVERED 62 METRIC_AC_ACTIVE_ENERGY_DELIVERED_PHASE_1 63 METRIC_AC_ACTIVE_ENERGY_DELIVERED_PHASE_2 64 METRIC_AC_ACTIVE_ENERGY_DELIVERED_PHASE_3 65 METRIC_AC_REACTIVE_ENERGY 66 METRIC_AC_REACTIVE_ENERGY_PHASE_1 67 METRIC_AC_REACTIVE_ENERGY_PHASE_2 69 METRIC_AC_REACTIVE_ENERGY_PHASE_3 70 METRIC_AC_THD_CURRENT 80 AC harmonics METRIC_AC_THD_CURRENT_PHASE_1 81 METRIC_AC_THD_CURRENT_PHASE_2 82 METRIC_AC_THD_CURRENT_PHASE_3 83 METRIC_BATTERY_CAPACITY 101 General BMS metrics. METRIC_BATTERY_SOC_PCT 102 METRIC_BATTERY_TEMPERATURE 103 METRIC_INVERTER_TEMPERATURE 120 General inverter metrics. METRIC_EV_CHARGER_TEMPERATURE 140 EV charging station metrics. METRIC_SENSOR_WIND_SPEED 160 General sensor metrics METRIC_SENSOR_WIND_DIRECTION 162 METRIC_SENSOR_TEMPERATURE 163 METRIC_SENSOR_RELATIVE_HUMIDITY 164 METRIC_SENSOR_DEW_POINT 165 METRIC_SENSOR_AIR_PRESSURE 166 METRIC_SENSOR_IRRADIANCE 167"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/metric_sample/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/lifetime/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/lifetime/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/lifetime.proto</p> <ul> <li>Lifetime</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/lifetime/#frequenzapicommonv1microgridlifetimeproto","title":"frequenz/api/common/v1/microgrid/lifetime.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/lifetime/#lifetime","title":"Lifetime","text":"<p>Lifetime captures the timestamps indicating the active operational period of a microgrid asset, such as a component, connection, sensor, or any other entity with a limited operational lifetime.</p> <p>!!! warning \"Permanent Deletion\"     The <code>end_timestamp</code> indicates that the asset has been permanently removed     from the system.</p> Field Type Label Description start_timestamp google.protobuf.Timestamp The timestamp when the asset became operationally active. end_timestamp google.protobuf.Timestamp Optional timestamp when the asset's operational activity ceased."},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/lifetime/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/microgrid/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/microgrid/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/microgrid.proto</p> <ul> <li> <p>Microgrid</p> </li> <li> <p>MicrogridStatus</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/microgrid/#frequenzapicommonv1microgridmicrogridproto","title":"frequenz/api/common/v1/microgrid/microgrid.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/microgrid/#microgrid","title":"Microgrid","text":"<p>Microgrid contains details of a specific microgrid. A microgrid is a localized grouping of electricity generation, energy storage, and loads that normally operates connected to a traditional centralized grid. Each microgrid has a unique identifier and is associated with an enterprise account. A key feature is that it has a physical location and is situated in a delivery area.</p> <p>!!! info \"Key Concepts\"      - <code>Physical Location</code>: Geographical coordinates specify the exact        physical location of the microgrid.      - <code>Delivery Area</code>: Each microgrid is part of a broader delivery area,        which is crucial for energy trading and compliance.</p> Field Type Label Description id uint64 Unique identifier of the microgrid. enterprise_id uint64 Unique identifier linking this microgrid to its parent enterprise account. name string Name of the microgrid. delivery_area frequenz.api.common.v1.grid.DeliveryArea The delivery area where the microgrid is located, as identified by a specific code. location frequenz.api.common.v1.Location Physical location of the microgrid, in geographical co-ordinates. status MicrogridStatus The current status of the microgrid. create_timestamp google.protobuf.Timestamp The UTC timestamp indicating when the microgrid was initially created. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/microgrid/#microgridstatus","title":"MicrogridStatus","text":"<p>MicrogridStatus defines the possible statuses for a microgrid.</p> Name Number Description MICROGRID_STATUS_UNSPECIFIED 0 The status is unspecified. This should not be used. MICROGRID_STATUS_ACTIVE 1 The microgrid is active. MICROGRID_STATUS_INACTIVE 2 The microgrid is inactive."},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/microgrid/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/battery/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/battery/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/components/battery.proto</p> <ul> <li> <p>Battery</p> </li> <li> <p>BatteryType</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/battery/#frequenzapicommonv1microgridcomponentsbatteryproto","title":"frequenz/api/common/v1/microgrid/components/battery.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/battery/#battery","title":"Battery","text":"<p>A representation of a battery.</p> Field Type Label Description type BatteryType The battery type. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/battery/#batterytype","title":"BatteryType","text":"<p>Enumerated battery types.</p> Name Number Description BATTERY_TYPE_UNSPECIFIED 0 Unspecified. BATTERY_TYPE_LI_ION 1 Li-ion batteries. BATTERY_TYPE_NA_ION 2 Sodium-ion batteries"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/battery/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/components/components.proto</p> <ul> <li>Component</li> <li>ComponentCategoryMetadataVariant</li> <li>ComponentConnection</li> <li>ComponentData</li> <li> <p>ComponentState</p> </li> <li> <p>ComponentCategory</p> </li> <li>ComponentErrorCode</li> <li>ComponentStateCode</li> <li>ComponentStatus</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#frequenzapicommonv1microgridcomponentscomponentsproto","title":"frequenz/api/common/v1/microgrid/components/components.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#component","title":"Component","text":"<p>Microgrid electrical component details.</p> Field Type Label Description id uint64 The component ID. microgrid_id uint64 Unique identifier of the parent microgrid_id. name string The component name. category ComponentCategory The component category. E.g., Inverter, Battery, etc. category_type ComponentCategoryMetadataVariant The metadata specific to the component category type. manufacturer string The component manufacturer. model_name string The model name of the component. status ComponentStatus The status of the component. operational_lifetime frequenz.api.common.v1.microgrid.Lifetime The operational lifetime of the component. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componentcategorymetadatavariant","title":"ComponentCategoryMetadataVariant","text":"<p>Metadata specific to a microgrid component.</p> Field Type Label Description battery Battery ev_charger EvCharger fuse Fuse grid GridConnectionPoint inverter Inverter voltage_transformer VoltageTransformer <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componentconnection","title":"ComponentConnection","text":"<p>ComponentConnection describes a single electrical link between two components within a microgrid, effectively representing the physical wiring as viewed from the grid connection point, if one exists, or from the islanding point, in case of an islanded microgrids.</p> <p>!!! note \"Physical Representation\"     This message is not about data flow but rather about the physical     electrical connections between components. Therefore, the IDs for the     source and destination components correspond to the actual setup within     the microgrid.</p> <p>!!! note \"Direction\"     The direction of the connection follows the flow of current away from the     grid connection point, or in case of islands, away from the islanding     point. This direction is aligned with positive current according to the     [Passive Sign Convention]     (https://en.wikipedia.org/wiki/Passive_sign_convention).</p> <p>!!! info \"Historical Data\"     The timestamps of when a connection was created and terminated allows for     tracking the changes over time to a microgrid, providing insights into     when and how the microgrid infrastructure has been modified.</p> Field Type Label Description source_component_id uint64 Unique identifier of the component where the connection originates. This is aligned with the direction of current flow away from the grid connection point, or in case of islands, away from the islanding point. destination_component_id uint64 Unique ID of the component where the connection terminates. This is the component towards which the current flows. operational_lifetime frequenz.api.common.v1.microgrid.Lifetime The operational lifetime of the connection. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componentdata","title":"ComponentData","text":"<p>ComponentData message aggregates multiple metrics, operational states, and errors, related to a specific microgrid component.</p> <p>Example</p> <p>Example output of a component data message:   <code>{      component_id: 13,      metric_samples: [        /* list of metrics for multiple timestamps */        {          sampled_at: &amp;#34;2023-10-01T00:00:00Z&amp;#34;,          metric: &amp;#34;DC_VOLTAGE_V&amp;#34;,          sample: {},          bounds: {},        },        {          sampled_at: &amp;#34;2023-10-01T00:00:00Z&amp;#34;,          metric: &amp;#34;DC_VOLTAGE_V&amp;#34;,          sample: {},          bounds: {},        }      ],      states: [        /* list of states for multiple timestamps */        {          sampled_at: &amp;#34;2023-10-01T00:00:00Z&amp;#34;,          states: [],          errors: [],        },        {          sampled_at: &amp;#34;2023-10-01T00:00:00Z&amp;#34;,          states: [],          errors: [],        },      ]    }</code></p> Field Type Label Description component_id uint64 The ID of the microgrid component. metric_samples frequenz.api.common.v1.metrics.MetricSample repeated List of measurements for a metric of the specific microgrid component. states ComponentState repeated List of states of a specific microgrid component. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componentstate","title":"ComponentState","text":"<p>Representation of a component state and errors.</p> Field Type Label Description sampled_at google.protobuf.Timestamp The time at which the state was sampled. states ComponentStateCode repeated List of states of the microgrid component. <p>!!! note The list will contain unique members. No state will exist twice in this list. | | warnings | ComponentErrorCode | repeated | List of warnings for the microgrid component.</p> <p>!!! note This list may have warnings even if the component state is not in an error state.</p> <p>!!! note The list will contain unique members. No warning will exist twice in this list. | | errors | ComponentErrorCode | repeated | List of errors for the microgrid component.</p> <p>!!! note This list is expected to have errors if and only if the component is in an error state.</p> <p>!!! note The list will contain unique members. No error will exist twice in this list. |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componentcategory","title":"ComponentCategory","text":"<p>Enumrated component categories.</p> Name Number Description COMPONENT_CATEGORY_UNSPECIFIED 0 An unknown component categories, useful for error handling, and marking unknown components in a list of components with otherwise known categories. COMPONENT_CATEGORY_GRID 1 The point where the local microgrid is connected to the grid. COMPONENT_CATEGORY_METER 2 A meter, for measuring electrical metrics, e.g., current, voltage, etc. COMPONENT_CATEGORY_INVERTER 3 An electricity generator, with batteries or solar energy. COMPONENT_CATEGORY_CONVERTER 4 A DC-DC converter. COMPONENT_CATEGORY_BATTERY 5 A storage system for electrical energy, used by inverters. COMPONENT_CATEGORY_EV_CHARGER 6 A station for charging electrical vehicles. COMPONENT_CATEGORY_CRYPTO_MINER 8 A crypto miner. COMPONENT_CATEGORY_ELECTROLYZER 9 An electrolyzer for converting water into hydrogen and oxygen. COMPONENT_CATEGORY_CHP 10 A heat and power combustion plant (CHP stands for combined heat and power). COMPONENT_CATEGORY_RELAY 11 A relay. Relays generally have two states: open (connected) and closed (disconnected). They are generally placed in front of a component, e.g., an inverter, to control whether the component is connected to the grid or not. COMPONENT_CATEGORY_PRECHARGER 12 A precharge module. Precharging involves gradually ramping up the DC voltage to prevent any potential damage to sensitive electrical components like capacitors. While many inverters and batteries come equipped with in-built precharging mechanisms, some may lack this feature. In such cases, we need to use external precharging modules. COMPONENT_CATEGORY_FUSE 13 A fuse. Fuses are used to protect electrical components from overcurrents. COMPONENT_CATEGORY_VOLTAGE_TRANSFORMER 14 A voltage transformer. Voltage transformers are used to step up or step down the voltage, keeping the power somewhat constant by increasing or decreasing the current. If voltage is stepped up, current is stepped down, and vice versa. Note that voltage transformers have efficiency losses, so the output power is always less than the input power. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componenterrorcode","title":"ComponentErrorCode","text":"<p>A representation of all possible errors that can occur across all component categories.</p> Name Number Description COMPONENT_ERROR_CODE_UNSPECIFIED 0 Default value. No specific error is specified. COMPONENT_ERROR_CODE_UNKNOWN 1 The component is reporting an unknown or an undefined error, and the sender cannot parse the component error to any of the variants below. COMPONENT_ERROR_CODE_SWITCH_ON_FAULT 2 Error indicating that the component could not be switched on. COMPONENT_ERROR_CODE_UNDERVOLTAGE 3 Error indicating that the component is operating under the minimum rated voltage. COMPONENT_ERROR_CODE_OVERVOLTAGE 4 Error indicating that the component is operating over the maximum rated voltage. COMPONENT_ERROR_CODE_OVERCURRENT 5 Error indicating that the component is drawing more current than the maximum rated value. COMPONENT_ERROR_CODE_OVERCURRENT_CHARGING 6 Error indicating that the component's consumption current is over the maximum rated value during charging. COMPONENT_ERROR_CODE_OVERCURRENT_DISCHARGING 7 Error indicating that the component's production current is over the maximum rated value during discharging. COMPONENT_ERROR_CODE_OVERTEMPERATURE 8 Error indicating that the component is operating over the maximum rated temperature. COMPONENT_ERROR_CODE_UNDERTEMPERATURE 9 Error indicating that the component is operating under the minimum rated temperature. COMPONENT_ERROR_CODE_HIGH_HUMIDITY 10 Error indicating that the component is exposed to high humidity levels over the maximum rated value. COMPONENT_ERROR_CODE_FUSE_ERROR 11 Error indicating that the component's fuse has blown. COMPONENT_ERROR_CODE_PRECHARGE_ERROR 12 Error indicating that the component's precharge unit has failed. COMPONENT_ERROR_CODE_PLAUSIBILITY_ERROR 13 Error indicating plausibility issues within the system involving this component. COMPONENT_ERROR_CODE_UNDERVOLTAGE_SHUTDOWN 14 Error indicating system shutdown due to undervoltage involving this component. COMPONENT_ERROR_CODE_EV_UNEXPECTED_PILOT_FAILURE 15 Error indicating unexpected pilot failure in an electric vehicle (EV) component. COMPONENT_ERROR_CODE_FAULT_CURRENT 16 Error indicating fault current detected in the component. COMPONENT_ERROR_CODE_SHORT_CIRCUIT 17 Error indicating a short circuit detected in the component. COMPONENT_ERROR_CODE_CONFIG_ERROR 18 Error indicating a configuration error related to the component. COMPONENT_ERROR_CODE_ILLEGAL_COMPONENT_STATE_CODE_REQUESTED 19 Error indicating an illegal state requested for the component. COMPONENT_ERROR_CODE_HARDWARE_INACCESSIBLE 20 Error indicating that the hardware of the component is inaccessible. COMPONENT_ERROR_CODE_INTERNAL 21 Error indicating an internal error within the component. COMPONENT_ERROR_CODE_UNAUTHORIZED 22 Error indicating that the component is unauthorized to perform the last requested action. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_STATION 40 Error indicating electric vehicle (EV) cable was abruptly unplugged from the charging station. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_EV 41 Error indicating electric vehicle (EV) cable was abruptly unplugged from the vehicle. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_LOCK_FAILED 42 Error indicating electric vehicle (EV) cable lock failure. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_INVALID 43 Error indicating an invalid electric vehicle (EV) cable. COMPONENT_ERROR_CODE_EV_CONSUMER_INCOMPATIBLE 44 Error indicating an incompatible electric vehicle (EV) plug. COMPONENT_ERROR_CODE_BATTERY_IMBALANCE 50 Error indicating a battery system imbalance. COMPONENT_ERROR_CODE_BATTERY_LOW_SOH 51 Error indicating a low state of health (SOH) detected in the battery. COMPONENT_ERROR_CODE_BATTERY_BLOCK_ERROR 52 Error indicating a battery block error. COMPONENT_ERROR_CODE_BATTERY_CONTROLLER_ERROR 53 Error indicating a battery controller error. COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR 54 Error indicating a battery relay error. COMPONENT_ERROR_CODE_BATTERY_CALIBRATION_NEEDED 56 Error indicating that battery calibration is needed. COMPONENT_ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED 60 Error indicating that the relays have been cycled for the maximum number of times. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componentstatecode","title":"ComponentStateCode","text":"<p>Enum to represent the various states that a component can be in. This enum is unified across all component categories for consistency.</p> Name Number Description COMPONENT_STATE_CODE_UNSPECIFIED 0 Default value when the component state is not explicitly set. This is the zero value of the enum. COMPONENT_STATE_CODE_UNKNOWN 1 State when the component is in an unknown or undefined condition. This is used when the sender is unable to classify the component into any other state. COMPONENT_STATE_CODE_UNAVAILABLE 2 State when the component is temporarily unavailable for operation. COMPONENT_STATE_CODE_SWITCHING_OFF 3 State when the component is in the process of switching off. COMPONENT_STATE_CODE_OFF 4 State when the component has successfully switched off. COMPONENT_STATE_CODE_SWITCHING_ON 5 State when the component is in the process of switching on from an off state. COMPONENT_STATE_CODE_STANDBY 6 State when the component is in standby mode, and not immediately ready for immediate operations. COMPONENT_STATE_CODE_READY 7 State when the component is fully operational and ready for use. COMPONENT_STATE_CODE_CHARGING 8 State when the component is actively consuming energy. COMPONENT_STATE_CODE_DISCHARGING 9 State when the component is actively producing or releasing energy. COMPONENT_STATE_CODE_ERROR 10 State when the component is in an error state and may need attention. COMPONENT_STATE_CODE_EV_CHARGING_CABLE_UNPLUGGED 20 The Electric Vehicle (EV) charging cable is unplugged from the charging station. COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_STATION 21 The EV charging cable is plugged into the charging station. COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_EV 22 The EV charging cable is plugged into the vehicle. COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_STATION 23 The EV charging cable is locked at the charging station end, indicating readiness for charging. COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_EV 24 The EV charging cable is locked at the vehicle end, indicating that charging is active. COMPONENT_STATE_CODE_RELAY_OPEN 30 The relay is in an open state, meaning no current can flow through. COMPONENT_STATE_CODE_RELAY_CLOSED 31 The relay is in a closed state, allowing current to flow. COMPONENT_STATE_CODE_PRECHARGER_OPEN 40 The precharger circuit is open, meaning it's not currently active. COMPONENT_STATE_CODE_PRECHARGER_PRECHARGING 41 The precharger is in a precharging state, preparing the main circuit for activation. COMPONENT_STATE_CODE_PRECHARGER_CLOSED 42 The precharger circuit is closed, allowing full current to flow to the main circuit. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#componentstatus","title":"ComponentStatus","text":"<p>ComponentStatus defines the possible statuses for a component.</p> <p>Note</p> <p>The status indicates the status set by the user via the user interface. The status is not yet included in the Component messages and should be added.</p> Name Number Description COMPONENT_STATUS_UNSPECIFIED 0 The status is unspecified. This should not be used. COMPONENT_STATUS_ACTIVE 1 The component is active. COMPONENT_STATUS_INACTIVE 2 The component is inactive."},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/components/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/ev_charger/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/ev_charger/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/components/ev_charger.proto</p> <ul> <li> <p>EvCharger</p> </li> <li> <p>EvChargerType</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/ev_charger/#frequenzapicommonv1microgridcomponentsev_chargerproto","title":"frequenz/api/common/v1/microgrid/components/ev_charger.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/ev_charger/#evcharger","title":"EvCharger","text":"<p>A representation of an EV chaging station.</p> Field Type Label Description type EvChargerType The EV charger type. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/ev_charger/#evchargertype","title":"EvChargerType","text":"<p>Enumerated EV charger types.</p> Name Number Description EV_CHARGER_TYPE_UNSPECIFIED 0 Default type. EV_CHARGER_TYPE_AC 1 The EV charging station supports AC charging only. EV_CHARGER_TYPE_DC 2 The EV charging station supports DC charging only. EV_CHARGER_TYPE_HYBRID 3 The EV charging station supports both AC and DC."},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/ev_charger/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/fuse/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/fuse/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/components/fuse.proto</p> <ul> <li>Fuse</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/fuse/#frequenzapicommonv1microgridcomponentsfuseproto","title":"frequenz/api/common/v1/microgrid/components/fuse.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/fuse/#fuse","title":"Fuse","text":"<p>A representation of a fuse. The fuse component represents a fuse in the microgrid. It is used to protect components from overcurrents.</p> Field Type Label Description rated_current uint32 The rated current of the fuse in amperes. This is the maximum current that the fuse can withstand for a long time. This limit applies to currents both flowing in or out of each of the 3 phases individually. <p>In other words, a current i A at one of the phases of the node must comply with the following constraint: <code>-rated_fuse_current &amp;lt;= i &amp;lt;= rated_fuse_current</code> |</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/fuse/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/grid/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/grid/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/components/grid.proto</p> <ul> <li>GridConnectionPoint</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/grid/#frequenzapicommonv1microgridcomponentsgridproto","title":"frequenz/api/common/v1/microgrid/components/grid.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/grid/#gridconnectionpoint","title":"GridConnectionPoint","text":"<p>A representation of a grid connection point. This is the point where a microgrid connects to the grid.</p> <p>The terms \"Grid Connection Point\" and \"Point of Common Coupling\" (PCC) are commonly used in the context.</p> <p>While both terms describe a connection point to the grid, the <code>GridConnectionPoint</code> is specifically the physical connection point of the generation facility to the grid, often concerned with the technical and ownership aspects of the connection.</p> <p>In contrast, the PCC is is more specific in terms of electrical engineering. It refers to the point where a customer's local electrical system (such as a microgrid) connects to the utility distribution grid in such a way that it can affect other customers\u2019 systems connected to the same network. It is the point where the grid and customer's electrical systems interface and where issues like power quality and supply regulations are assessed.</p> <p>The term <code>GridConnectionPoint</code> is used to make it clear that what is referred to here is the physical connection point of the local facility to the grid. Note that this may also be the PCC in some cases.</p> Field Type Label Description rated_fuse_current uint32 This refers to the maximum amount of electrical current, in amperes, that a fuse at the grid connection point is designed to safely carry under normal operating conditions. <p>This limit applies to currents both flowing in or out of each of the 3 phases individually.</p> <p>In other words, a current i A at one of the phases of the grid connection point must comply with the following constraint: <code>-rated_fuse_current &amp;lt;= i &amp;lt;= rated_fuse_current</code> |</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/grid/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/inverter/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/inverter/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/components/inverter.proto</p> <ul> <li> <p>Inverter</p> </li> <li> <p>InverterType</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/inverter/#frequenzapicommonv1microgridcomponentsinverterproto","title":"frequenz/api/common/v1/microgrid/components/inverter.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/inverter/#inverter","title":"Inverter","text":"<p>A representation of an inverter. The inverter metadata.</p> Field Type Label Description type InverterType The inverter type. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/inverter/#invertertype","title":"InverterType","text":"<p>Enumerated inverter types.</p> Name Number Description INVERTER_TYPE_UNSPECIFIED 0 Unspecified. INVERTER_TYPE_BATTERY 1 Battery inverter. INVERTER_TYPE_SOLAR 2 Solar inverter. INVERTER_TYPE_HYBRID 3 Hybrid inverter."},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/inverter/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/transformer/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/transformer/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/components/transformer.proto</p> <ul> <li>VoltageTransformer</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/transformer/#frequenzapicommonv1microgridcomponentstransformerproto","title":"frequenz/api/common/v1/microgrid/components/transformer.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/transformer/#voltagetransformer","title":"VoltageTransformer","text":"<p>A representation of a voltage transformer. Voltage transformers are used to step up or step down the voltage, keeping the power somewhat constant by increasing or decreasing the current. If voltage is stepped up, current is stepped down, and vice versa. Note that voltage transformers have efficiency losses, so the output power is always less than the input power.</p> Field Type Label Description primary float The primary voltage of the transformer. This is the input voltage that is stepped up or down. secondary float The secondary voltage of the transformer. This is the output voltage that is the result of stepping the primary voltage up or down."},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/components/transformer/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/microgrid/sensors/sensors.proto</p> <ul> <li>Sensor</li> <li>SensorData</li> <li>SensorMetricSample</li> <li> <p>SensorState</p> </li> <li> <p>SensorCategory</p> </li> <li>SensorErrorCode</li> <li>SensorMetric</li> <li>SensorStateCode</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#frequenzapicommonv1microgridsensorssensorsproto","title":"frequenz/api/common/v1/microgrid/sensors/sensors.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensor","title":"Sensor","text":"<p>A sensor that measures a physical metric in the microgrid's surrounding environment.</p> Field Type Label Description id uint64 A unique identifier for the sensor. microgrid_id uint64 Unique identifier of the parent microgrid_id. name string An optional name for the sensor. category SensorCategory The category of the sensor. manufacturer string The sensor manufacturer. model_name string The model name of the sensor. operational_lifetime frequenz.api.common.v1.microgrid.Lifetime The operational lifetime of the sensor. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensordata","title":"SensorData","text":"<p>ComponentData message aggregates multiple metrics, operational states, and errors, related to a specific microgrid component.</p> <p>Example</p> <p>Example output of a component data message:   <code>{      component_id: 13,      metric_samples: [        /* list of metrics for multiple timestamps */        {          sampled_at: &amp;#34;2023-10-01T00:00:00Z&amp;#34;,          metric: &amp;#34;METRIC_SENSOR_TEMPERATURE&amp;#34;,          sample: metric_sample_type: {simple_metric: {value: 23.5},          bounds: {},        },        {          sampled_at: &amp;#34;2023-10-01T00:00:00Z&amp;#34;,          metric: &amp;#34;METRIC_SENSOR_RELATIVE_HUMIDITY&amp;#34;,          sample: metric_sample_type: {simple_metric: {value: 23.5},          bounds: {},        }      ]    }</code></p> Field Type Label Description sensor_id uint64 The ID of the microgrid sensors. metric_samples SensorMetricSample repeated List of measurements for a metric of the specific microgrid sensor. states SensorState repeated List of states of a specific microgrid sensor. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensormetricsample","title":"SensorMetricSample","text":"<p>Representation of a sampled sensor metric along with its value.</p> Field Type Label Description sampled_at google.protobuf.Timestamp The UTC timestamp of when the metric was sampled. metric frequenz.api.common.v1.metrics.Metric The metric that was sampled. sample frequenz.api.common.v1.metrics.MetricSampleVariant The value of the sampled metric. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensorstate","title":"SensorState","text":"<p>Representation of a sensor state and errors.</p> Field Type Label Description sampled_at google.protobuf.Timestamp The time at which the state was sampled. states SensorStateCode repeated List of states of the microgrid sensor. <p>!!! note The list will contain unique members. No state will exist twice in this list. | | errors | SensorErrorCode | repeated | List of errors for the microgrid sensor.</p> <p>!!! note This list is expected to have errors if and only if the sensor is in an error state.</p> <p>!!! note The list will contain unique members. No error will exist twice in this list. |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensorcategory","title":"SensorCategory","text":"<p>Enumerated sensor categories.</p> Name Number Description SENSOR_CATEGORY_UNSPECIFIED 0 Unspecified SENSOR_CATEGORY_THERMOMETER 1 Thermometer (temperature sensor) SENSOR_CATEGORY_HYGROMETER 2 Hygrometer (humidity sensor) SENSOR_CATEGORY_BAROMETER 3 Barometer (pressure sensor). SENSOR_CATEGORY_PYRANOMETER 4 Pyranometer (solar irradiance sensor). SENSOR_CATEGORY_ANEMOMETER 5 Anemometer (wind velocity and direction sensor). SENSOR_CATEGORY_ACCELEROMETER 6 Accelerometers (acceleration sensor). SENSOR_CATEGORY_GENERAL 7 General sensors, which do not fall in any of the above categories <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensorerrorcode","title":"SensorErrorCode","text":"<p>A representation of all possible errors that can occur in sensors.</p> Name Number Description SENSOR_ERROR_CODE_UNSPECIFIED 0 Default value. No specific error is specified. SENSOR_ERROR_CODE_UNKNOWN 1 The sensor is reporting an unknown or an undefined error, and the sender cannot parse the sensor error to any of the variants below. SENSOR_ERROR_CODE_INTERNAL 2 Error indicating an internal error within the sensor. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensormetric","title":"SensorMetric","text":"<p>Enumrated sensor metrics.</p> Name Number Description SENSOR_METRIC_UNSPECIFIED 0 Unspecified. SENSOR_METRIC_TEMPERATURE 1 Temperature. In Celsius (\u00b0C). SENSOR_METRIC_HUMIDITY 2 Humidity In percentage (%). SENSOR_METRIC_PRESSURE 3 Pressure In Pascal (Pa). SENSOR_METRIC_IRRADIANCE 4 Irradiance / Radiation flux In watts per square meter (W / m^2). SENSOR_METRIC_VELOCITY 5 Velocity In meters per second (m / s). SENSOR_METRIC_ACCELERATION 6 Acceleration. In meters per second per second (m / s^2) SENSOR_METRIC_ANGLE 7 Metric to represent angles, for metrics like direction. In angles with respect to the (magnetic) North (\u00b0). SENSOR_METRIC_DEW_POINT 8 Dew point. The temperature at which the air becomes saturated with water vapor. <p>In Celsius (\u00b0C). |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#sensorstatecode","title":"SensorStateCode","text":"<p>Enum to represent the various states that a sensor can be in. This enum is unified across all sensor categories for consistency.</p> Name Number Description SENSOR_STATE_CODE_UNSPECIFIED 0 Default value when the sensor state is not explicitly set. This is the zero value of the enum. SENSOR_STATE_CODE_ON 1 The sensor is up and running. SENSOR_STATE_CODE_ERROR 2 The sensor is in an error state."},{"location":"protobuf-reference/frequenz/api/common/v1/microgrid/sensors/sensors/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_info/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_info/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/pagination/pagination_info.proto</p> <ul> <li>PaginationInfo</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_info/#frequenzapicommonv1paginationpagination_infoproto","title":"frequenz/api/common/v1/pagination/pagination_info.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_info/#paginationinfo","title":"PaginationInfo","text":"<p>A message providing metadata about paginated list results. The PaginationInfo message delivers metadata concerning the paginated list results and should be appended to the response message of a list request. The total_items field must be set to the total count of items that adhere to the filter criteria defined in the request. The next_page_token field should be populated with the token to be used in the subsequent request to fetch the next page of results. If there are no additional results, the next_page_token field should be omitted.</p> Field Type Label Description total_items uint32 The total number of items that match the filter criteria defined in the request. next_page_token string optional Token for retrieving the next set of results."},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_info/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_params/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_params/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/pagination/pagination_params.proto</p> <ul> <li>PaginationParams</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_params/#frequenzapicommonv1paginationpagination_paramsproto","title":"frequenz/api/common/v1/pagination/pagination_params.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_params/#paginationparams","title":"PaginationParams","text":"<p>A message defining parameters for paginating list requests. It can be appended to a request message to specify the desired page of results and the maximum number of results per page. For initial requests (requesting the first page), the page_token should not be provided. For subsequent requests (requesting any page after the first), the next_page_token from the previous responses PaginationInfo must be supplied. The page_size should only be specified in the initial request and will be disregarded in subsequent requests.</p> Field Type Label Description page_size uint32 optional The maximum number of results to be returned per request. page_token string optional The token identifying a specific page of the list results."},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/pagination_params/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"python-reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>frequenz<ul> <li>api<ul> <li>common<ul> <li>v1<ul> <li>grid<ul> <li>delivery_area_pb2</li> <li>delivery_area_pb2_grpc</li> </ul> </li> <li>location_pb2</li> <li>location_pb2_grpc</li> <li>metrics<ul> <li>bounds_pb2</li> <li>bounds_pb2_grpc</li> <li>metric_sample_pb2</li> <li>metric_sample_pb2_grpc</li> </ul> </li> <li>microgrid<ul> <li>components<ul> <li>battery_pb2</li> <li>battery_pb2_grpc</li> <li>components_pb2</li> <li>components_pb2_grpc</li> <li>ev_charger_pb2</li> <li>ev_charger_pb2_grpc</li> <li>fuse_pb2</li> <li>fuse_pb2_grpc</li> <li>grid_pb2</li> <li>grid_pb2_grpc</li> <li>inverter_pb2</li> <li>inverter_pb2_grpc</li> <li>transformer_pb2</li> <li>transformer_pb2_grpc</li> </ul> </li> <li>lifetime_pb2</li> <li>lifetime_pb2_grpc</li> <li>microgrid_pb2</li> <li>microgrid_pb2_grpc</li> <li>sensors<ul> <li>sensors_pb2</li> <li>sensors_pb2_grpc</li> </ul> </li> </ul> </li> <li>pagination<ul> <li>pagination_info_pb2</li> <li>pagination_info_pb2_grpc</li> <li>pagination_params_pb2</li> <li>pagination_params_pb2_grpc</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"python-reference/frequenz/api/common/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/#frequenz.api.common","title":"<code>frequenz.api.common</code>","text":"<p>Frequenz common gRPC API and bindings.</p> <p>TODO(cookiecutter): Add a more descriptive module description.</p>"},{"location":"python-reference/frequenz/api/common/v1/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/v1/#frequenz.api.common.v1","title":"<code>frequenz.api.common.v1</code>","text":"<p>Frequenz common gRPC API and bindings.</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/","title":"location_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2","title":"<code>frequenz.api.common.v1.location_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location","title":"<code>frequenz.api.common.v1.location_pb2.Location</code>","text":"<p>             Bases: <code>Message</code></p> <p>A pair of geographical co-ordinates, representing the location of a place.</p> Source code in <code>frequenz/api/common/v1/location_pb2.py</code> <pre><code>  _globals['_LOCATION']._serialized_start=65\n  _globals['_LOCATION']._serialized_end=134\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location.country_code","title":"<code>country_code: builtins.str</code>  <code>instance-attribute</code>","text":"<p>Country ISO 3166-1 Alpha 2</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location.latitude","title":"<code>latitude: builtins.float</code>  <code>instance-attribute</code>","text":"<p>Latitude ranges from -90 (South) to 90 (North)</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location.longitude","title":"<code>longitude: builtins.float</code>  <code>instance-attribute</code>","text":"<p>Longitude ranges from -180 (West) to 180 (East)</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2_grpc/","title":"location_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2_grpc/#frequenz.api.common.v1.location_pb2_grpc","title":"<code>frequenz.api.common.v1.location_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/v1/grid/#frequenz.api.common.v1.grid","title":"<code>frequenz.api.common.v1.grid</code>","text":""},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/","title":"delivery_area_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2","title":"<code>frequenz.api.common.v1.grid.delivery_area_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.ENERGY_MARKET_CODE_TYPE_EUROPE_EIC","title":"<code>frequenz.api.common.v1.grid.delivery_area_pb2.ENERGY_MARKET_CODE_TYPE_EUROPE_EIC: EnergyMarketCodeType.ValueType</code>  <code>module-attribute</code>","text":"<p>European Energy Identification Code Standard.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.ENERGY_MARKET_CODE_TYPE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.grid.delivery_area_pb2.ENERGY_MARKET_CODE_TYPE_UNSPECIFIED: EnergyMarketCodeType.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified type. This value is a placeholder and should not be used.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.ENERGY_MARKET_CODE_TYPE_US_NERC","title":"<code>frequenz.api.common.v1.grid.delivery_area_pb2.ENERGY_MARKET_CODE_TYPE_US_NERC: EnergyMarketCodeType.ValueType</code>  <code>module-attribute</code>","text":"<p>North American Electric Reliability Corporation identifiers.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea","title":"<code>frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea</code>","text":"<p>             Bases: <code>Message</code></p> <p>DeliveryArea represents the geographical or administrative region, usually defined and maintained by a Transmission System Operator (TSO), where electricity deliveries for a contract occur.</p> <p>The concept is important to energy trading as it delineates the agreed-upon delivery location. Delivery areas can have different codes based on the// jurisdiction in which they operate.</p> <p>Jurisdictional Differences</p> <p>This is typically represented by specific codes according to local jurisdiction. In Europe, this is represented by an EIC (Energy Identification Code).</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea.code","title":"<code>code: builtins.str</code>  <code>instance-attribute</code>","text":"<p>Code representing the unique identifier for the delivery area.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea.code_type","title":"<code>code_type: global___EnergyMarketCodeType.ValueType</code>  <code>instance-attribute</code>","text":"<p>Type of code used for identifying the delivery area itself.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2/#frequenz.api.common.v1.grid.delivery_area_pb2.EnergyMarketCodeType","title":"<code>frequenz.api.common.v1.grid.delivery_area_pb2.EnergyMarketCodeType</code>","text":"<p>             Bases: <code>_EnergyMarketCodeType</code></p> <p>CodeType specifies the type of identification code used for uniquely identifying various entities such as delivery areas, market participants, and grid components within the energy market. This enumeration aims to offer compatibility across different jurisdictional standards.</p> <p>Understanding Code Types</p> <p>Different regions or countries may have their own standards for uniquely identifying various entities within the energy market. For example, in Europe, the Energy Identification Code (EIC) is commonly used for this purpose.</p> <p>Extensibility</p> <p>New code types can be added to this enum to accommodate additional regional standards, enhancing the API's adaptability.</p> <p>Validation Required</p> <p>The chosen code type should correspond correctly with the <code>code</code> field in the relevant message objects, such as <code>DeliveryArea</code> or <code>Counterparty</code>. Failure to match the code type with the correct code could lead to processing errors.</p>"},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2_grpc/","title":"delivery_area_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/grid/delivery_area_pb2_grpc/#frequenz.api.common.v1.grid.delivery_area_pb2_grpc","title":"<code>frequenz.api.common.v1.grid.delivery_area_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/#frequenz.api.common.v1.metrics","title":"<code>frequenz.api.common.v1.metrics</code>","text":"<p>Frequenz Common API definitions for metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2/","title":"bounds_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2/#frequenz.api.common.v1.metrics.bounds_pb2","title":"<code>frequenz.api.common.v1.metrics.bounds_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2/#frequenz.api.common.v1.metrics.bounds_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2/#frequenz.api.common.v1.metrics.bounds_pb2.Bounds","title":"<code>frequenz.api.common.v1.metrics.bounds_pb2.Bounds</code>","text":"<p>             Bases: <code>Message</code></p> <p>A set of lower and upper bounds for any metric. The units of the bounds are always the same as the related metric.</p> Source code in <code>frequenz/api/common/v1/metrics/bounds_pb2.py</code> <pre><code># @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2/#frequenz.api.common.v1.metrics.bounds_pb2.Bounds-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2/#frequenz.api.common.v1.metrics.bounds_pb2.Bounds.lower","title":"<code>lower: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The lower bound. If absent, there is no lower bound.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2/#frequenz.api.common.v1.metrics.bounds_pb2.Bounds.upper","title":"<code>upper: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The upper bound. If absent, there is no upper bound.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2_grpc/","title":"bounds_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/bounds_pb2_grpc/#frequenz.api.common.v1.metrics.bounds_pb2_grpc","title":"<code>frequenz.api.common.v1.metrics.bounds_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/","title":"metric_sample_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_APPARENT_ENERGY","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_APPARENT_ENERGY: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC energy metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_APPARENT_POWER","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_APPARENT_POWER: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC power metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_FREQUENCY","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_FREQUENCY: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General AC electricity metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_POWER_FACTOR","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_POWER_FACTOR: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC Power factor</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_THD_CURRENT","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_AC_THD_CURRENT: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC harmonics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_BATTERY_CAPACITY","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_BATTERY_CAPACITY: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General BMS metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_DC_VOLTAGE","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_DC_VOLTAGE: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>DC electricity metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_EV_CHARGER_TEMPERATURE","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_EV_CHARGER_TEMPERATURE: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>EV charging station metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_INVERTER_TEMPERATURE","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_INVERTER_TEMPERATURE: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General inverter metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_SENSOR_WIND_SPEED","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_SENSOR_WIND_SPEED: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General sensor metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_UNSPECIFIED","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.METRIC_UNSPECIFIED: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.AggregatedMetricSample","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.AggregatedMetricSample</code>","text":"<p>             Bases: <code>Message</code></p> <p>Encapsulates derived statistical summaries of a single metric.</p> <p>The message allows for the reporting of statistical summaries \u2014 minimum, maximum, and average values - as well as the complete list of individual samples if available.</p> <p>This message represents derived metrics and contains fields for statistical summaries\u2014minimum, maximum, and average values. Individual measurements are are optional, accommodating scenarios where only subsets of this information are available.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.AggregatedMetricSample-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.AggregatedMetricSample.avg_value","title":"<code>avg_value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The derived average value of the metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.AggregatedMetricSample.max_value","title":"<code>max_value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The maximum measured value of the metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.AggregatedMetricSample.min_value","title":"<code>min_value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The minimum measured value of the metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.AggregatedMetricSample.raw_values","title":"<code>raw_values: google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]</code>  <code>property</code>","text":"<p>Optional array of all the raw individual values.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.Metric","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.Metric</code>","text":"<p>             Bases: <code>_Metric</code></p> <p>List of supported metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample</code>","text":"<p>             Bases: <code>Message</code></p> <p>Representation of a sampled metric along with its value.</p> <p>Note</p> <p>This represents a single sample of a specific metric, the value of which is either measured or derived at a particular time. The real-time system-defined bounds are optional and may not always be present or set.</p> <p>Note</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample--relationship-between-bounds-and-metric-samples","title":"Relationship Between Bounds and Metric Samples","text":"<p>Suppose a metric sample for active power has a lower-bound of -10,000 W, and an upper-bound of 10,000 W. For the system to accept a charge command, clients need to request current values within the bounds.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample.bounds","title":"<code>bounds: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[frequenz.api.common.v1.metrics.bounds_pb2.Bounds]</code>  <code>property</code>","text":"<p>List of bounds that apply to the metric sample.</p> <p>These bounds adapt in real-time to reflect the operating conditions at the time of aggregation or derivation.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample.bounds--multiple-bounds","title":"Multiple Bounds","text":"<p>In the case of certain components like batteries, multiple bounds might exist. These multiple bounds collectively extend the range of allowable values, effectively forming a union of all given bounds. In such cases, the value of the metric must be within at least one of the bounds. In accordance with the passive sign convention, bounds that limit discharge would have negative numbers, while those limiting charge, such as for the State of Power (SoP) metric, would be positive. Hence bounds can have positive and negative values depending on the metric they represent.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample.bounds--example","title":"Example","text":"<p>The diagram below illustrates the relationship between the bounds. <pre><code>     bound[0].lower                         bound[1].upper\n&lt;-------|============|------------------|============|---------&gt;\n               bound[0].upper      bound[1].lower\n</code></pre> ---- values here are disallowed and will be rejected ==== values here are allowed and will be accepted</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample.metric","title":"<code>metric: global___Metric.ValueType</code>  <code>instance-attribute</code>","text":"<p>The metric that was sampled.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample.sample","title":"<code>sample: global___MetricSampleVariant</code>  <code>property</code>","text":"<p>The value of the sampled metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample.sampled_at","title":"<code>sampled_at: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The UTC timestamp of when the metric was sampled.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSampleVariant","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSampleVariant</code>","text":"<p>             Bases: <code>Message</code></p> <p>MetricSampleVariant serves as a union type that can encapsulate either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>.</p> <p>This message is designed to offer flexibility in capturing different granularities of metric samples\u2014either a simple single-point measurement or an aggregated set of measurements for a metric.</p> <p>A <code>MetricSampleVariant</code> can hold either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>, but not both simultaneously. Setting one will nullify the other.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.SimpleMetricSample","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2.SimpleMetricSample</code>","text":"<p>             Bases: <code>Message</code></p> <p>Represents a single sample of a specific metric, the value of which is either measured or derived at a particular time.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.SimpleMetricSample-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2/#frequenz.api.common.v1.metrics.metric_sample_pb2.SimpleMetricSample.value","title":"<code>value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The value of the metric, which could be either measured or derived.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2_grpc/","title":"metric_sample_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/metric_sample_pb2_grpc/#frequenz.api.common.v1.metrics.metric_sample_pb2_grpc","title":"<code>frequenz.api.common.v1.metrics.metric_sample_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/#frequenz.api.common.v1.microgrid","title":"<code>frequenz.api.common.v1.microgrid</code>","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2/","title":"lifetime_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2/#frequenz.api.common.v1.microgrid.lifetime_pb2","title":"<code>frequenz.api.common.v1.microgrid.lifetime_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2/#frequenz.api.common.v1.microgrid.lifetime_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2/#frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime","title":"<code>frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime</code>","text":"<p>             Bases: <code>Message</code></p> <p>Lifetime captures the timestamps indicating the active operational period of a microgrid asset, such as a component, connection, sensor, or any other entity with a limited operational lifetime.</p> <p>Permanent Deletion</p> <p>The <code>end_timestamp</code> indicates that the asset has been permanently removed from the system.</p> Source code in <code>frequenz/api/common/v1/microgrid/lifetime_pb2.py</code> <pre><code>  _globals['_LIFETIME']._serialized_start=118\n  _globals['_LIFETIME']._serialized_end=232\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2/#frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2/#frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime.end_timestamp","title":"<code>end_timestamp: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>Optional timestamp when the asset's operational activity ceased.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2/#frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime.start_timestamp","title":"<code>start_timestamp: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The timestamp when the asset became operationally active.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2_grpc/","title":"lifetime_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/lifetime_pb2_grpc/#frequenz.api.common.v1.microgrid.lifetime_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.lifetime_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/","title":"microgrid_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2","title":"<code>frequenz.api.common.v1.microgrid.microgrid_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.MICROGRID_STATUS_ACTIVE","title":"<code>frequenz.api.common.v1.microgrid.microgrid_pb2.MICROGRID_STATUS_ACTIVE: MicrogridStatus.ValueType</code>  <code>module-attribute</code>","text":"<p>The microgrid is active.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.MICROGRID_STATUS_INACTIVE","title":"<code>frequenz.api.common.v1.microgrid.microgrid_pb2.MICROGRID_STATUS_INACTIVE: MicrogridStatus.ValueType</code>  <code>module-attribute</code>","text":"<p>The microgrid is inactive.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.MICROGRID_STATUS_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.microgrid_pb2.MICROGRID_STATUS_UNSPECIFIED: MicrogridStatus.ValueType</code>  <code>module-attribute</code>","text":"<p>The status is unspecified. This should not be used.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid","title":"<code>frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid</code>","text":"<p>             Bases: <code>Message</code></p> <p>Microgrid contains details of a specific microgrid. A microgrid is a localized grouping of electricity generation, energy storage, and loads that normally operates connected to a traditional centralized grid. Each microgrid has a unique identifier and is associated with an enterprise account. A key feature is that it has a physical location and is situated in a delivery area.</p> <p>Key Concepts</p> <ul> <li><code>Physical Location</code>: Geographical coordinates specify the exact    physical location of the microgrid.</li> <li><code>Delivery Area</code>: Each microgrid is part of a broader delivery area,    which is crucial for energy trading and compliance.</li> </ul>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid.create_timestamp","title":"<code>create_timestamp: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The UTC timestamp indicating when the microgrid was initially created.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid.delivery_area","title":"<code>delivery_area: frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea</code>  <code>property</code>","text":"<p>The delivery area where the microgrid is located, as identified by a specific code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid.enterprise_id","title":"<code>enterprise_id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>Unique identifier linking this microgrid to its parent enterprise account.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid.id","title":"<code>id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>Unique identifier of the microgrid.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid.location","title":"<code>location: frequenz.api.common.v1.location_pb2.Location</code>  <code>property</code>","text":"<p>Physical location of the microgrid, in geographical co-ordinates.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid.name","title":"<code>name: builtins.str</code>  <code>instance-attribute</code>","text":"<p>Name of the microgrid.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.Microgrid.status","title":"<code>status: global___MicrogridStatus.ValueType</code>  <code>instance-attribute</code>","text":"<p>The current status of the microgrid.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2/#frequenz.api.common.v1.microgrid.microgrid_pb2.MicrogridStatus","title":"<code>frequenz.api.common.v1.microgrid.microgrid_pb2.MicrogridStatus</code>","text":"<p>             Bases: <code>_MicrogridStatus</code></p> <p>MicrogridStatus defines the possible statuses for a microgrid.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2_grpc/","title":"microgrid_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/microgrid_pb2_grpc/#frequenz.api.common.v1.microgrid.microgrid_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.microgrid_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/#frequenz.api.common.v1.microgrid.components","title":"<code>frequenz.api.common.v1.microgrid.components</code>","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/","title":"battery_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2","title":"<code>frequenz.api.common.v1.microgrid.components.battery_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2.BATTERY_TYPE_LI_ION","title":"<code>frequenz.api.common.v1.microgrid.components.battery_pb2.BATTERY_TYPE_LI_ION: BatteryType.ValueType</code>  <code>module-attribute</code>","text":"<p>Li-ion batteries.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2.BATTERY_TYPE_NA_ION","title":"<code>frequenz.api.common.v1.microgrid.components.battery_pb2.BATTERY_TYPE_NA_ION: BatteryType.ValueType</code>  <code>module-attribute</code>","text":"<p>Sodium-ion batteries</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2.BATTERY_TYPE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.components.battery_pb2.BATTERY_TYPE_UNSPECIFIED: BatteryType.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2.Battery","title":"<code>frequenz.api.common.v1.microgrid.components.battery_pb2.Battery</code>","text":"<p>             Bases: <code>Message</code></p> <p>A representation of a battery.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2.Battery-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2.Battery.type","title":"<code>type: global___BatteryType.ValueType</code>  <code>instance-attribute</code>","text":"<p>The battery type.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2/#frequenz.api.common.v1.microgrid.components.battery_pb2.BatteryType","title":"<code>frequenz.api.common.v1.microgrid.components.battery_pb2.BatteryType</code>","text":"<p>             Bases: <code>_BatteryType</code></p> <p>Enumerated battery types.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2_grpc/","title":"battery_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/battery_pb2_grpc/#frequenz.api.common.v1.microgrid.components.battery_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.components.battery_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/","title":"components_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_BATTERY","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_BATTERY: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A storage system for electrical energy, used by inverters.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_CHP","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_CHP: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A heat and power combustion plant (CHP stands for combined heat and power).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_CONVERTER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_CONVERTER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A DC-DC converter.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_CRYPTO_MINER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_CRYPTO_MINER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A crypto miner.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_ELECTROLYZER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_ELECTROLYZER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>An electrolyzer for converting water into hydrogen and oxygen.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_EV_CHARGER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_EV_CHARGER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A station for charging electrical vehicles.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_FUSE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_FUSE: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A fuse. Fuses are used to protect electrical components from overcurrents.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_GRID","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_GRID: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>The point where the local microgrid is connected to the grid.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_INVERTER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_INVERTER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>An electricity generator, with batteries or solar energy.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_METER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_METER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A meter, for measuring electrical metrics, e.g., current, voltage, etc.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_PRECHARGER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_PRECHARGER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A precharge module. Precharging involves gradually ramping up the DC voltage to prevent any potential damage to sensitive electrical components like capacitors. While many inverters and batteries come equipped with in-built precharging mechanisms, some may lack this feature. In such cases, we need to use external precharging modules.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_RELAY","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_RELAY: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A relay. Relays generally have two states: open (connected) and closed (disconnected). They are generally placed in front of a component, e.g., an inverter, to control whether the component is connected to the grid or not.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_UNSPECIFIED: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>An unknown component categories, useful for error handling, and marking unknown components in a list of components with otherwise known categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_VOLTAGE_TRANSFORMER","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_CATEGORY_VOLTAGE_TRANSFORMER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A voltage transformer. Voltage transformers are used to step up or step down the voltage, keeping the power somewhat constant by increasing or decreasing the current. If voltage is stepped up, current is stepped down, and vice versa. Note that voltage transformers have efficiency losses, so the output power is always less than the input power.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_BLOCK_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_BLOCK_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery block error.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_CALIBRATION_NEEDED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_CALIBRATION_NEEDED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that battery calibration is needed.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_CONTROLLER_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_CONTROLLER_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery controller error.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_IMBALANCE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_IMBALANCE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery system imbalance.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_LOW_SOH","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_LOW_SOH: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a low state of health (SOH) detected in the battery.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery relay error.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_CONFIG_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_CONFIG_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a configuration error related to the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_INVALID","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_INVALID: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an invalid electric vehicle (EV) cable.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_LOCK_FAILED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_LOCK_FAILED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating electric vehicle (EV) cable lock failure.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_EV","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_EV: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating electric vehicle (EV) cable was abruptly unplugged from the vehicle.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_STATION","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_STATION: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating electric vehicle (EV) cable was abruptly unplugged from the charging station.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CONSUMER_INCOMPATIBLE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_CONSUMER_INCOMPATIBLE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an incompatible electric vehicle (EV) plug.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_UNEXPECTED_PILOT_FAILURE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_EV_UNEXPECTED_PILOT_FAILURE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating unexpected pilot failure in an electric vehicle (EV) component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_FAULT_CURRENT","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_FAULT_CURRENT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating fault current detected in the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_FUSE_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_FUSE_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's fuse has blown.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_HARDWARE_INACCESSIBLE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_HARDWARE_INACCESSIBLE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the hardware of the component is inaccessible.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_HIGH_HUMIDITY","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_HIGH_HUMIDITY: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is exposed to high humidity levels over the maximum rated value.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_ILLEGAL_COMPONENT_STATE_CODE_REQUESTED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_ILLEGAL_COMPONENT_STATE_CODE_REQUESTED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an illegal state requested for the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_INTERNAL","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_INTERNAL: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an internal error within the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERCURRENT","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERCURRENT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is drawing more current than the maximum rated value.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_CHARGING","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_CHARGING: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's consumption current is over the maximum rated value during charging.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_DISCHARGING","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_DISCHARGING: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's production current is over the maximum rated value during discharging.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERTEMPERATURE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERTEMPERATURE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating over the maximum rated temperature.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERVOLTAGE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_OVERVOLTAGE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating over the maximum rated voltage.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_PLAUSIBILITY_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_PLAUSIBILITY_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating plausibility issues within the system involving this component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_PRECHARGE_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_PRECHARGE_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's precharge unit has failed.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the relays have been cycled for the maximum number of times.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_SHORT_CIRCUIT","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_SHORT_CIRCUIT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a short circuit detected in the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_SWITCH_ON_FAULT","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_SWITCH_ON_FAULT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component could not be switched on.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNAUTHORIZED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNAUTHORIZED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is unauthorized to perform the last requested action.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNDERTEMPERATURE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNDERTEMPERATURE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating under the minimum rated temperature.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating under the minimum rated voltage.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE_SHUTDOWN","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE_SHUTDOWN: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating system shutdown due to undervoltage involving this component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNKNOWN","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNKNOWN: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The component is reporting an unknown or an undefined error, and the sender cannot parse the component error to any of the variants below.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_ERROR_CODE_UNSPECIFIED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value. No specific error is specified.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_CHARGING","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_CHARGING: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is actively consuming energy.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_DISCHARGING","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_DISCHARGING: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is actively producing or releasing energy.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_ERROR","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_ERROR: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in an error state and may need attention.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_EV","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_EV: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is locked at the vehicle end, indicating that charging is active.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_STATION","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_STATION: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is locked at the charging station end, indicating readiness for charging.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_EV","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_EV: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is plugged into the vehicle.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_STATION","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_STATION: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is plugged into the charging station.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_UNPLUGGED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_EV_CHARGING_CABLE_UNPLUGGED: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The Electric Vehicle (EV) charging cable is unplugged from the charging station.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_OFF","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_OFF: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component has successfully switched off.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_PRECHARGER_CLOSED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_PRECHARGER_CLOSED: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The precharger circuit is closed, allowing full current to flow to the main circuit.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_PRECHARGER_OPEN","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_PRECHARGER_OPEN: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The precharger circuit is open, meaning it's not currently active.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_PRECHARGER_PRECHARGING","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_PRECHARGER_PRECHARGING: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The precharger is in a precharging state, preparing the main circuit for activation.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_READY","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_READY: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is fully operational and ready for use.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_RELAY_CLOSED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_RELAY_CLOSED: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The relay is in a closed state, allowing current to flow.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_RELAY_OPEN","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_RELAY_OPEN: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The relay is in an open state, meaning no current can flow through.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_STANDBY","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_STANDBY: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in standby mode, and not immediately ready for immediate operations.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_SWITCHING_OFF","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_SWITCHING_OFF: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in the process of switching off.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_SWITCHING_ON","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_SWITCHING_ON: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in the process of switching on from an off state.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_UNAVAILABLE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_UNAVAILABLE: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is temporarily unavailable for operation.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_UNKNOWN","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_UNKNOWN: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in an unknown or undefined condition. This is used when the sender is unable to classify the component into any other state.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATE_CODE_UNSPECIFIED: ComponentStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value when the component state is not explicitly set. This is the zero value of the enum.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATUS_ACTIVE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATUS_ACTIVE: ComponentStatus.ValueType</code>  <code>module-attribute</code>","text":"<p>The component is active.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATUS_INACTIVE","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATUS_INACTIVE: ComponentStatus.ValueType</code>  <code>module-attribute</code>","text":"<p>The component is inactive.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATUS_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.COMPONENT_STATUS_UNSPECIFIED: ComponentStatus.ValueType</code>  <code>module-attribute</code>","text":"<p>The status is unspecified. This should not be used.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.Component</code>","text":"<p>             Bases: <code>Message</code></p> <p>Microgrid electrical component details.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.category","title":"<code>category: global___ComponentCategory.ValueType</code>  <code>instance-attribute</code>","text":"<p>The component category. E.g., Inverter, Battery, etc.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.category_type","title":"<code>category_type: global___ComponentCategoryMetadataVariant</code>  <code>property</code>","text":"<p>The metadata specific to the component category type.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.id","title":"<code>id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The component ID.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.manufacturer","title":"<code>manufacturer: builtins.str</code>  <code>instance-attribute</code>","text":"<p>The component manufacturer.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.microgrid_id","title":"<code>microgrid_id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>Unique identifier of the parent microgrid_id.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.model_name","title":"<code>model_name: builtins.str</code>  <code>instance-attribute</code>","text":"<p>The model name of the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.name","title":"<code>name: builtins.str</code>  <code>instance-attribute</code>","text":"<p>The component name.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.operational_lifetime","title":"<code>operational_lifetime: frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime</code>  <code>property</code>","text":"<p>The operational lifetime of the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.Component.status","title":"<code>status: global___ComponentStatus.ValueType</code>  <code>instance-attribute</code>","text":"<p>The status of the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentCategory","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentCategory</code>","text":"<p>             Bases: <code>_ComponentCategory</code></p> <p>Enumrated component categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentCategoryMetadataVariant","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentCategoryMetadataVariant</code>","text":"<p>             Bases: <code>Message</code></p> <p>Metadata specific to a microgrid component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentConnection","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentConnection</code>","text":"<p>             Bases: <code>Message</code></p> <p>ComponentConnection describes a single electrical link between two components within a microgrid, effectively representing the physical wiring as viewed from the grid connection point, if one exists, or from the islanding point, in case of an islanded microgrids.</p> <p>Physical Representation</p> <p>This message is not about data flow but rather about the physical electrical connections between components. Therefore, the IDs for the source and destination components correspond to the actual setup within the microgrid.</p> <p>Direction</p> <p>The direction of the connection follows the flow of current away from the grid connection point, or in case of islands, away from the islanding point. This direction is aligned with positive current according to the [Passive Sign Convention] (https://en.wikipedia.org/wiki/Passive_sign_convention).</p> <p>Historical Data</p> <p>The timestamps of when a connection was created and terminated allows for tracking the changes over time to a microgrid, providing insights into when and how the microgrid infrastructure has been modified.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentConnection-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentConnection.destination_component_id","title":"<code>destination_component_id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>Unique ID of the component where the connection terminates. This is the component towards which the current flows.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentConnection.operational_lifetime","title":"<code>operational_lifetime: frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime</code>  <code>property</code>","text":"<p>The operational lifetime of the connection.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentConnection.source_component_id","title":"<code>source_component_id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>Unique identifier of the component where the connection originates. This is aligned with the direction of current flow away from the grid connection point, or in case of islands, away from the islanding point.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentData","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentData</code>","text":"<p>             Bases: <code>Message</code></p> <p>ComponentData message aggregates multiple metrics, operational states, and errors, related to a specific microgrid component.</p> <p>Example</p> <p>Example output of a component data message:   <code>{      component_id: 13,      metric_samples: [        /* list of metrics for multiple timestamps */        {          sampled_at: \"2023-10-01T00:00:00Z\",          metric: \"DC_VOLTAGE_V\",          sample: {},          bounds: {},        },        {          sampled_at: \"2023-10-01T00:00:00Z\",          metric: \"DC_VOLTAGE_V\",          sample: {},          bounds: {},        }      ],      states: [        /* list of states for multiple timestamps */        {          sampled_at: \"2023-10-01T00:00:00Z\",          states: [],          errors: [],        },        {          sampled_at: \"2023-10-01T00:00:00Z\",          states: [],          errors: [],        },      ]    }</code></p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentData-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentData.component_id","title":"<code>component_id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The ID of the microgrid component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentData.metric_samples","title":"<code>metric_samples: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSample]</code>  <code>property</code>","text":"<p>List of measurements for a metric of the specific microgrid component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentData.states","title":"<code>states: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComponentState]</code>  <code>property</code>","text":"<p>List of states of a specific microgrid component.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentErrorCode","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentErrorCode</code>","text":"<p>             Bases: <code>_ComponentErrorCode</code></p> <p>A representation of all possible errors that can occur across all component categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentState","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentState</code>","text":"<p>             Bases: <code>Message</code></p> <p>Representation of a component state and errors.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentState-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentState.errors","title":"<code>errors: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ComponentErrorCode.ValueType]</code>  <code>property</code>","text":"<p>List of errors for the microgrid component.</p> <p>Note</p> <p>This list is expected to have errors if and only if the component is in    an error state.</p> <p>Note</p> <p>The list will contain unique members. No error will exist twice in    this list.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentState.sampled_at","title":"<code>sampled_at: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The time at which the state was sampled.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentState.states","title":"<code>states: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ComponentStateCode.ValueType]</code>  <code>property</code>","text":"<p>List of states of the microgrid component.</p> <p>Note</p> <p>The list will contain unique members. No state will exist twice in    this list.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentState.warnings","title":"<code>warnings: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ComponentErrorCode.ValueType]</code>  <code>property</code>","text":"<p>List of warnings for the microgrid component.</p> <p>Note</p> <p>This list may have warnings even if the component state is not in an    error state.</p> <p>Note</p> <p>The list will contain unique members. No warning will exist twice in    this list.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentStateCode","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentStateCode</code>","text":"<p>             Bases: <code>_ComponentStateCode</code></p> <p>Enum to represent the various states that a component can be in. This enum is unified across all component categories for consistency.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2/#frequenz.api.common.v1.microgrid.components.components_pb2.ComponentStatus","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2.ComponentStatus</code>","text":"<p>             Bases: <code>_ComponentStatus</code></p> <p>ComponentStatus defines the possible statuses for a component.</p> <p>Note</p> <p>The status indicates the status set by the user via the user interface. The status is not yet included in the Component messages and should be added.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2_grpc/","title":"components_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/components_pb2_grpc/#frequenz.api.common.v1.microgrid.components.components_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.components.components_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/","title":"ev_charger_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_AC","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_AC: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging station supports AC charging only.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_DC","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_DC: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging station supports DC charging only.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_HYBRID","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_HYBRID: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging station supports both AC and DC.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EV_CHARGER_TYPE_UNSPECIFIED: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>Default type.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EvCharger","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EvCharger</code>","text":"<p>             Bases: <code>Message</code></p> <p>A representation of an EV chaging station.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EvCharger-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EvCharger.type","title":"<code>type: global___EvChargerType.ValueType</code>  <code>instance-attribute</code>","text":"<p>The EV charger type.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EvChargerType","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2.EvChargerType</code>","text":"<p>             Bases: <code>_EvChargerType</code></p> <p>Enumerated EV charger types.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2_grpc/","title":"ev_charger_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/ev_charger_pb2_grpc/#frequenz.api.common.v1.microgrid.components.ev_charger_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.components.ev_charger_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2/","title":"fuse_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2/#frequenz.api.common.v1.microgrid.components.fuse_pb2","title":"<code>frequenz.api.common.v1.microgrid.components.fuse_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2/#frequenz.api.common.v1.microgrid.components.fuse_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2/#frequenz.api.common.v1.microgrid.components.fuse_pb2.Fuse","title":"<code>frequenz.api.common.v1.microgrid.components.fuse_pb2.Fuse</code>","text":"<p>             Bases: <code>Message</code></p> <p>A representation of a fuse. The fuse component represents a fuse in the microgrid. It is used to protect components from overcurrents.</p> Source code in <code>frequenz/api/common/v1/microgrid/components/fuse_pb2.py</code> <pre><code>  _globals['_FUSE']._serialized_end=132\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2/#frequenz.api.common.v1.microgrid.components.fuse_pb2.Fuse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2/#frequenz.api.common.v1.microgrid.components.fuse_pb2.Fuse.rated_current","title":"<code>rated_current: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The rated current of the fuse in amperes. This is the maximum current that the fuse can withstand for a long time. This limit applies to currents both flowing in or out of each of the 3 phases individually.</p> <p>In other words, a current i A at one of the phases of the node must comply with the following constraint: <code>-rated_fuse_current &lt;= i &lt;= rated_fuse_current</code></p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2_grpc/","title":"fuse_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/fuse_pb2_grpc/#frequenz.api.common.v1.microgrid.components.fuse_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.components.fuse_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2/","title":"grid_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2/#frequenz.api.common.v1.microgrid.components.grid_pb2","title":"<code>frequenz.api.common.v1.microgrid.components.grid_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2/#frequenz.api.common.v1.microgrid.components.grid_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2/#frequenz.api.common.v1.microgrid.components.grid_pb2.GridConnectionPoint","title":"<code>frequenz.api.common.v1.microgrid.components.grid_pb2.GridConnectionPoint</code>","text":"<p>             Bases: <code>Message</code></p> <p>A representation of a grid connection point. This is the point where a microgrid connects to the grid.</p> <p>The terms \"Grid Connection Point\" and \"Point of Common Coupling\" (PCC) are commonly used in the context.</p> <p>While both terms describe a connection point to the grid, the <code>GridConnectionPoint</code> is specifically the physical connection point of the generation facility to the grid, often concerned with the technical and ownership aspects of the connection.</p> <p>In contrast, the PCC is is more specific in terms of electrical engineering. It refers to the point where a customer's local electrical system (such as a microgrid) connects to the utility distribution grid in such a way that it can affect other customers\u2019 systems connected to the same network. It is the point where the grid and customer's electrical systems interface and where issues like power quality and supply regulations are assessed.</p> <p>The term <code>GridConnectionPoint</code> is used to make it clear that what is referred to here is the physical connection point of the local facility to the grid. Note that this may also be the PCC in some cases.</p> Source code in <code>frequenz/api/common/v1/microgrid/components/grid_pb2.py</code> <pre><code>  _globals['_GRIDCONNECTIONPOINT']._serialized_end=152\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2/#frequenz.api.common.v1.microgrid.components.grid_pb2.GridConnectionPoint-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2/#frequenz.api.common.v1.microgrid.components.grid_pb2.GridConnectionPoint.rated_fuse_current","title":"<code>rated_fuse_current: builtins.int</code>  <code>instance-attribute</code>","text":"<p>This refers to the maximum amount of electrical current, in amperes, that a fuse at the grid connection point is designed to safely carry under normal operating conditions.</p> <p>This limit applies to currents both flowing in or out of each of the 3 phases individually.</p> <p>In other words, a current i A at one of the phases of the grid connection point must comply with the following constraint: <code>-rated_fuse_current &lt;= i &lt;= rated_fuse_current</code></p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2_grpc/","title":"grid_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/grid_pb2_grpc/#frequenz.api.common.v1.microgrid.components.grid_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.components.grid_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/","title":"inverter_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_BATTERY","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_BATTERY: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Battery inverter.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_HYBRID","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_HYBRID: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Hybrid inverter.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_SOLAR","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_SOLAR: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Solar inverter.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2.INVERTER_TYPE_UNSPECIFIED: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.Inverter","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2.Inverter</code>","text":"<p>             Bases: <code>Message</code></p> <p>A representation of an inverter. The inverter metadata.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.Inverter-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.Inverter.type","title":"<code>type: global___InverterType.ValueType</code>  <code>instance-attribute</code>","text":"<p>The inverter type.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2/#frequenz.api.common.v1.microgrid.components.inverter_pb2.InverterType","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2.InverterType</code>","text":"<p>             Bases: <code>_InverterType</code></p> <p>Enumerated inverter types.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2_grpc/","title":"inverter_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/inverter_pb2_grpc/#frequenz.api.common.v1.microgrid.components.inverter_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.components.inverter_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2/","title":"transformer_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2/#frequenz.api.common.v1.microgrid.components.transformer_pb2","title":"<code>frequenz.api.common.v1.microgrid.components.transformer_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2/#frequenz.api.common.v1.microgrid.components.transformer_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2/#frequenz.api.common.v1.microgrid.components.transformer_pb2.VoltageTransformer","title":"<code>frequenz.api.common.v1.microgrid.components.transformer_pb2.VoltageTransformer</code>","text":"<p>             Bases: <code>Message</code></p> <p>A representation of a voltage transformer. Voltage transformers are used to step up or step down the voltage, keeping the power somewhat constant by increasing or decreasing the current. If voltage is stepped up, current is stepped down, and vice versa. Note that voltage transformers have efficiency losses, so the output power is always less than the input power.</p> Source code in <code>frequenz/api/common/v1/microgrid/components/transformer_pb2.py</code> <pre><code>  _globals['_VOLTAGETRANSFORMER']._serialized_end=166\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2/#frequenz.api.common.v1.microgrid.components.transformer_pb2.VoltageTransformer-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2/#frequenz.api.common.v1.microgrid.components.transformer_pb2.VoltageTransformer.primary","title":"<code>primary: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The primary voltage of the transformer. This is the input voltage that is stepped up or down.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2/#frequenz.api.common.v1.microgrid.components.transformer_pb2.VoltageTransformer.secondary","title":"<code>secondary: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The secondary voltage of the transformer. This is the output voltage that is the result of stepping the primary voltage up or down.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2_grpc/","title":"transformer_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/components/transformer_pb2_grpc/#frequenz.api.common.v1.microgrid.components.transformer_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.components.transformer_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/#frequenz.api.common.v1.microgrid.sensors","title":"<code>frequenz.api.common.v1.microgrid.sensors</code>","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/","title":"sensors_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_ACCELEROMETER","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_ACCELEROMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Accelerometers (acceleration sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_ANEMOMETER","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_ANEMOMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Anemometer (wind velocity and direction sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_BAROMETER","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_BAROMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Barometer (pressure sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_GENERAL","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_GENERAL: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>General sensors, which do not fall in any of the above categories</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_HYGROMETER","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_HYGROMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Hygrometer (humidity sensor)</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_PYRANOMETER","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_PYRANOMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Pyranometer (solar irradiance sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_THERMOMETER","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_THERMOMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Thermometer (temperature sensor)</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_CATEGORY_UNSPECIFIED: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_ERROR_CODE_INTERNAL","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_ERROR_CODE_INTERNAL: SensorErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an internal error within the sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_ERROR_CODE_UNKNOWN","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_ERROR_CODE_UNKNOWN: SensorErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The sensor is reporting an unknown or an undefined error, and the sender cannot parse the sensor error to any of the variants below.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_ERROR_CODE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_ERROR_CODE_UNSPECIFIED: SensorErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value. No specific error is specified.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_ACCELERATION","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_ACCELERATION: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Acceleration. In meters per second per second (m / s^2)</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_ANGLE","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_ANGLE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Metric to represent angles, for metrics like direction. In angles with respect to the (magnetic) North (\u00b0).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_DEW_POINT","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_DEW_POINT: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Dew point. The temperature at which the air becomes saturated with water vapor.</p> <p>In Celsius (\u00b0C).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_HUMIDITY","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_HUMIDITY: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Humidity In percentage (%).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_IRRADIANCE","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_IRRADIANCE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Irradiance / Radiation flux In watts per square meter (W / m^2).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_PRESSURE","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_PRESSURE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Pressure In Pascal (Pa).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_TEMPERATURE","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_TEMPERATURE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Temperature. In Celsius (\u00b0C).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_UNSPECIFIED: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_VELOCITY","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_METRIC_VELOCITY: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Velocity In meters per second (m / s).</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_STATE_CODE_ERROR","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_STATE_CODE_ERROR: SensorStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The sensor is in an error state.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_STATE_CODE_ON","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_STATE_CODE_ON: SensorStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The sensor is up and running.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_STATE_CODE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SENSOR_STATE_CODE_UNSPECIFIED: SensorStateCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value when the sensor state is not explicitly set. This is the zero value of the enum.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor</code>","text":"<p>             Bases: <code>Message</code></p> <p>A sensor that measures a physical metric in the microgrid's surrounding environment.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor.category","title":"<code>category: global___SensorCategory.ValueType</code>  <code>instance-attribute</code>","text":"<p>The category of the sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor.id","title":"<code>id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>A unique identifier for the sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor.manufacturer","title":"<code>manufacturer: builtins.str</code>  <code>instance-attribute</code>","text":"<p>The sensor manufacturer.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor.microgrid_id","title":"<code>microgrid_id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>Unique identifier of the parent microgrid_id.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor.model_name","title":"<code>model_name: builtins.str</code>  <code>instance-attribute</code>","text":"<p>The model name of the sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor.name","title":"<code>name: builtins.str</code>  <code>instance-attribute</code>","text":"<p>An optional name for the sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.Sensor.operational_lifetime","title":"<code>operational_lifetime: frequenz.api.common.v1.microgrid.lifetime_pb2.Lifetime</code>  <code>property</code>","text":"<p>The operational lifetime of the sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorCategory","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorCategory</code>","text":"<p>             Bases: <code>_SensorCategory</code></p> <p>Enumerated sensor categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorData","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorData</code>","text":"<p>             Bases: <code>Message</code></p> <p>ComponentData message aggregates multiple metrics, operational states, and errors, related to a specific microgrid component.</p> <p>Example</p> <p>Example output of a component data message:   <code>{      component_id: 13,      metric_samples: [        /* list of metrics for multiple timestamps */        {          sampled_at: \"2023-10-01T00:00:00Z\",          metric: \"METRIC_SENSOR_TEMPERATURE\",          sample: metric_sample_type: {simple_metric: {value: 23.5},          bounds: {},        },        {          sampled_at: \"2023-10-01T00:00:00Z\",          metric: \"METRIC_SENSOR_RELATIVE_HUMIDITY\",          sample: metric_sample_type: {simple_metric: {value: 23.5},          bounds: {},        }      ]    }</code></p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorData-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorData.metric_samples","title":"<code>metric_samples: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SensorMetricSample]</code>  <code>property</code>","text":"<p>List of measurements for a metric of the specific microgrid sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorData.sensor_id","title":"<code>sensor_id: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The ID of the microgrid sensors.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorData.states","title":"<code>states: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SensorState]</code>  <code>property</code>","text":"<p>List of states of a specific microgrid sensor.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorErrorCode","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorErrorCode</code>","text":"<p>             Bases: <code>_SensorErrorCode</code></p> <p>A representation of all possible errors that can occur in sensors.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetric","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetric</code>","text":"<p>             Bases: <code>_SensorMetric</code></p> <p>Enumrated sensor metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetricSample","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetricSample</code>","text":"<p>             Bases: <code>Message</code></p> <p>Representation of a sampled sensor metric along with its value.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetricSample-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetricSample.metric","title":"<code>metric: frequenz.api.common.v1.metrics.metric_sample_pb2.Metric.ValueType</code>  <code>instance-attribute</code>","text":"<p>The metric that was sampled.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetricSample.sample","title":"<code>sample: frequenz.api.common.v1.metrics.metric_sample_pb2.MetricSampleVariant</code>  <code>property</code>","text":"<p>The value of the sampled metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorMetricSample.sampled_at","title":"<code>sampled_at: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The UTC timestamp of when the metric was sampled.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorState","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorState</code>","text":"<p>             Bases: <code>Message</code></p> <p>Representation of a sensor state and errors.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorState-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorState.errors","title":"<code>errors: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___SensorErrorCode.ValueType]</code>  <code>property</code>","text":"<p>List of errors for the microgrid sensor.</p> <p>Note</p> <p>This list is expected to have errors if and only if the sensor is in    an error state.</p> <p>Note</p> <p>The list will contain unique members. No error will exist twice in    this list.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorState.sampled_at","title":"<code>sampled_at: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The time at which the state was sampled.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorState.states","title":"<code>states: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___SensorStateCode.ValueType]</code>  <code>property</code>","text":"<p>List of states of the microgrid sensor.</p> <p>Note</p> <p>The list will contain unique members. No state will exist twice in    this list.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorStateCode","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2.SensorStateCode</code>","text":"<p>             Bases: <code>_SensorStateCode</code></p> <p>Enum to represent the various states that a sensor can be in. This enum is unified across all sensor categories for consistency.</p>"},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2_grpc/","title":"sensors_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/microgrid/sensors/sensors_pb2_grpc/#frequenz.api.common.v1.microgrid.sensors.sensors_pb2_grpc","title":"<code>frequenz.api.common.v1.microgrid.sensors.sensors_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/","title":"Index","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/#frequenz.api.common.v1.pagination","title":"<code>frequenz.api.common.v1.pagination</code>","text":"<p>Frequenz common gRPC API and bindings.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2/","title":"pagination_info_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2/#frequenz.api.common.v1.pagination.pagination_info_pb2","title":"<code>frequenz.api.common.v1.pagination.pagination_info_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2/#frequenz.api.common.v1.pagination.pagination_info_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2/#frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo","title":"<code>frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo</code>","text":"<p>             Bases: <code>Message</code></p> <p>A message providing metadata about paginated list results. The PaginationInfo message delivers metadata concerning the paginated list results and should be appended to the response message of a list request. The total_items field must be set to the total count of items that adhere to the filter criteria defined in the request. The next_page_token field should be populated with the token to be used in the subsequent request to fetch the next page of results. If there are no additional results, the next_page_token field should be omitted.</p> Source code in <code>frequenz/api/common/v1/pagination/pagination_info_pb2.py</code> <pre><code>  _globals['_PAGINATIONINFO']._serialized_start=94\n  _globals['_PAGINATIONINFO']._serialized_end=181\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2/#frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2/#frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo.next_page_token","title":"<code>next_page_token: builtins.str</code>  <code>instance-attribute</code>","text":"<p>Token for retrieving the next set of results.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2/#frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo.total_items","title":"<code>total_items: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The total number of items that match the filter criteria defined in the request.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2_grpc/","title":"pagination_info_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_info_pb2_grpc/#frequenz.api.common.v1.pagination.pagination_info_pb2_grpc","title":"<code>frequenz.api.common.v1.pagination.pagination_info_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2/","title":"pagination_params_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2/#frequenz.api.common.v1.pagination.pagination_params_pb2","title":"<code>frequenz.api.common.v1.pagination.pagination_params_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2/#frequenz.api.common.v1.pagination.pagination_params_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2/#frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams","title":"<code>frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams</code>","text":"<p>             Bases: <code>Message</code></p> <p>A message defining parameters for paginating list requests. It can be appended to a request message to specify the desired page of results and the maximum number of results per page. For initial requests (requesting the first page), the page_token should not be provided. For subsequent requests (requesting any page after the first), the next_page_token from the previous responses PaginationInfo must be supplied. The page_size should only be specified in the initial request and will be disregarded in subsequent requests.</p> Source code in <code>frequenz/api/common/v1/pagination/pagination_params_pb2.py</code> <pre><code>  _globals['_PAGINATIONPARAMS']._serialized_end=192\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2/#frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2/#frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams.page_size","title":"<code>page_size: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The maximum number of results to be returned per request.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2/#frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams.page_token","title":"<code>page_token: builtins.str</code>  <code>instance-attribute</code>","text":"<p>The token identifying a specific page of the list results.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2_grpc/","title":"pagination_params_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination/pagination_params_pb2_grpc/#frequenz.api.common.v1.pagination.pagination_params_pb2_grpc","title":"<code>frequenz.api.common.v1.pagination.pagination_params_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"}]}