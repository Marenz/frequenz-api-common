{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Frequenz Common API","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Frequenz common gRPC API and bindings</p>"},{"location":"#contributing","title":"Contributing","text":"<p>If you want to know how to build this project and contribute to it, please check out the Contributing Guide.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to Frequenz Common API","text":""},{"location":"CONTRIBUTING/#build","title":"Build","text":"<p>You can use <code>build</code> to simply build the source and binary distribution:</p> <pre><code>python -m pip install build\npython -m build\n</code></pre>"},{"location":"CONTRIBUTING/#local-development","title":"Local development","text":"<p>You need to make sure you have the <code>git submodules</code> updated:</p> <pre><code>git submodule update --init\n</code></pre>"},{"location":"CONTRIBUTING/#running-protolint","title":"Running protolint","text":"<p>To make sure some common mistakes are avoided and to ensure a consistent style it is recommended to run <code>protolint</code>. After you installed <code>protolint</code>, just run:</p> <pre><code>protolint lint proto\n</code></pre>"},{"location":"CONTRIBUTING/#python-setup","title":"Python setup","text":"<p>You can use editable installs to develop the project locally (it will install all the dependencies too):</p> <pre><code>python -m pip install -e .\n</code></pre> <p>This will also generate the Python files from the <code>proto/</code> files and leave them in <code>py/</code>, so you can inspect them.</p> <p>Or you can install all development dependencies (<code>mypy</code>, <code>pylint</code>, <code>pytest</code>, etc.) in one go too: <pre><code>python -m pip install -e .[dev]\n</code></pre></p> <p>If you don't want to install all the dependencies, you can also use <code>nox</code> to run the tests and other checks creating its own virtual environments:</p> <pre><code>python -m pip install .[dev-noxfile]\nnox\n</code></pre> <p>You can also use <code>nox -R</code> to reuse the current testing environment to speed up test at the expense of a higher chance to end up with a dirty test environment.</p>"},{"location":"CONTRIBUTING/#upgrading-dependencies","title":"Upgrading dependencies","text":"<p>If you want to update the dependency <code>frequenz-api-common</code>, then you need to:</p> <ol> <li>Update the submodule <code>frequenz-api-common</code></li> <li>Update the version of the <code>frequenz-api-common</code> package in <code>pyproject.toml</code></li> </ol> <p>The version of <code>frequenz-api-common</code> used in both places mentioned above should be the same.</p> <p>Here is an example of upgrading the <code>frequenz-api-common</code> dependency to version <code>v0.2.0</code>: <pre><code>ver=\"0.2.0\"\n\ncd submodules/frequenz-api-common\ngit remote update\ngit checkout v${ver}\ncd -\n\nsed s/\"frequenz-api-common == [0-9]\\.[0-9]\\.[0-9]\"/\"frequenz-api-common == ${ver}\"/g -i pyproject.toml\n</code></pre></p>"},{"location":"CONTRIBUTING/#running-tests-checks-individually","title":"Running tests / checks individually","text":"<p>For a better development test cycle you can install the runtime and test dependencies and run <code>pytest</code> manually.</p> <pre><code>python -m pip install .[dev-pytest]  # included in .[dev] too\n\n# And for example\npytest tests/test_*.py\n</code></pre> <p>Or you can use <code>nox</code>:</p> <pre><code>nox -R -s pytest -- test/test_*.py\n</code></pre> <p>The same appliest to <code>pylint</code> or <code>mypy</code> for example:</p> <pre><code>nox -R -s pylint -- test/test_*.py\nnox -R -s mypy -- test/test_*.py\n</code></pre>"},{"location":"CONTRIBUTING/#building-the-documentation","title":"Building the documentation","text":"<p>To build the documentation, first install the dependencies (if you didn't install all <code>dev</code> dependencies):</p> <pre><code>python -m pip install -e .[dev-mkdocs]\n</code></pre> <p>Then you can build the documentation (it will be written in the <code>site/</code> directory):</p> <pre><code>mkdocs build\n</code></pre> <p>Or you can just serve the documentation without building it using:</p> <pre><code>mkdocs serve\n</code></pre> <p>Your site will be updated live when you change your files (provided that you used <code>pip install -e .</code>, beware of a common pitfall of using <code>pip install</code> without <code>-e</code>, in that case the API reference won't change unless you do a new <code>pip install</code>).</p> <p>To build multi-version documentation, we use mike. If you want to see how the multi-version sites looks like locally, you can use:</p> <pre><code>mike deploy my-version\nmike set-default my-version\nmike serve\n</code></pre> <p><code>mike</code> works in mysterious ways. Some basic information:</p> <ul> <li><code>mike deploy</code> will do a <code>mike build</code> and write the results to your local <code>gh-pages</code> branch. <code>my-version</code> is an arbitrary name for the local version   you want to preview.</li> <li><code>mike set-default</code> is needed so when you serve the documentation, it goes to   your newly produced documentation by default.</li> <li><code>mike serve</code> will serve the contents of your local <code>gh-pages</code> branch. Be   aware that, unlike <code>mkdocs serve</code>, changes to the sources won't be shown   live, as the <code>mike deploy</code> step is needed to refresh them.</li> </ul> <p>Be careful not to use <code>--push</code> with <code>mike deploy</code>, otherwise it will push your local <code>gh-pages</code> branch to the <code>origin</code> remote.</p> <p>That said, if you want to test the actual website in your fork, you can always use <code>mike deploy --push --remote your-fork-remote</code>, and then access the GitHub pages produced for your fork.</p>"},{"location":"CONTRIBUTING/#releasing","title":"Releasing","text":"<p>These are the steps to create a new release:</p> <ol> <li> <p>Get the latest head you want to create a release from.</p> </li> <li> <p>Update the <code>RELEASE_NOTES.md</code> file if it is not complete, up to date, and    remove template comments (<code>&lt;!-- ... -&gt;</code>) and empty sections. Submit a pull    request if an update is needed, wait until it is merged, and update the    latest head you want to create a release from to get the new merged pull    request.</p> </li> <li> <p>Create a new signed tag using the release notes and    a semver compatible version number with a <code>v</code> prefix,    for example:</p> </li> </ol> <pre><code>git tag -s --cleanup=whitespace -F RELEASE_NOTES.md v0.0.1\n</code></pre> <ol> <li> <p>Push the new tag.</p> </li> <li> <p>A GitHub action will test the tag and if all goes well it will create    a GitHub    Release,    and upload a new package to    PyPI    automatically.</p> </li> <li> <p>Once this is done, reset the <code>RELEASE_NOTES.md</code> with the template:</p> </li> </ol> <pre><code>cp .github/RELEASE_NOTES.template.md RELEASE_NOTES.md\n</code></pre> <p>Commit the new release notes and create a PR (this step should be automated    eventually too).</p> <ol> <li>Celebrate!</li> </ol>"},{"location":"SUMMARY/","title":"SUMMARY","text":"<ul> <li>Home</li> <li>Protobuf API Reference</li> <li>Python API Reference</li> <li>Contributing</li> </ul>"},{"location":"protobuf-reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>frequenz<ul> <li>api<ul> <li>common<ul> <li>v1<ul> <li>components<ul> <li>data.proto</li> </ul> </li> <li>components.proto</li> <li>location.proto</li> <li>metrics<ul> <li>electrical.proto</li> </ul> </li> <li>metrics.proto</li> <li>pagination.proto</li> <li>sensors.proto</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/components/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/components.proto</p> <ul> <li>BatteryType</li> <li>ComponentCategory</li> <li>EvChargerType</li> <li>InverterType</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/#frequenzapicommonv1componentsproto","title":"frequenz/api/common/v1/components.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/components/#batterytype","title":"BatteryType","text":"<p>Enumerated battery types.</p> Name Number Description BATTERY_TYPE_UNSPECIFIED 0 Unspecified. BATTERY_TYPE_LI_ION 1 Li-ion batteries. BATTERY_TYPE_NA_ION 2 Sodium-ion batteries <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/#componentcategory","title":"ComponentCategory","text":"<p>Enumrated component categories.</p> Name Number Description COMPONENT_CATEGORY_UNSPECIFIED 0 An unknown component categories, useful for error handling, and marking unknown components in a list of components with otherwise known categories. COMPONENT_CATEGORY_GRID 1 The point where the local microgrid is connected to the grid. COMPONENT_CATEGORY_METER 2 A meter, for measuring electrical metrics, e.g., current, voltage, etc. COMPONENT_CATEGORY_INVERTER 3 An electricity generator, with batteries or solar energy. COMPONENT_CATEGORY_CONVERTER 4 A DC-DC converter. COMPONENT_CATEGORY_BATTERY 5 A storage system for electrical energy, used by inverters. COMPONENT_CATEGORY_EV_CHARGER 6 A station for charging electrical vehicles. COMPONENT_CATEGORY_CRYPTO_MINER 8 A crypto miner. COMPONENT_CATEGORY_ELECTROLYZER 9 An electrolyzer for converting water into hydrogen and oxygen. COMPONENT_CATEGORY_CHP 10 A heat and power combustion plant (CHP stands for combined heat and power). COMPONENT_CATEGORY_RELAY 11 A relay. Relays generally have two states: open (connected) and closed (disconnected). They are generally placed in front of a component, e.g., an inverter, to control whether the component is connected to the grid or not. COMPONENT_CATEGORY_PRECHARGER 12 A precharge module. Precharging involves gradually ramping up the DC voltage to prevent any potential damage to sensitive electrical components like capacitors. While many inverters and batteries come equipped with in-built precharging mechanisms, some may lack this feature. In such cases, we need to use external precharging modules. COMPONENT_CATEGORY_FUSE 13 A fuse. Fuses are used to protect electrical components from overcurrents. COMPONENT_CATEGORY_VOLTAGE_TRANSFORMER 14 A voltage transformer. Voltage transformers are used to step up or step down the voltage, keeping the power somewhat constant by increasing or decreasing the current. If voltage is stepped up, current is stepped down, and vice versa. Note that voltage transformers have efficiency losses, so the output power is always less than the input power. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/#evchargertype","title":"EvChargerType","text":"<p>Enumerated EV charger types.</p> Name Number Description EV_CHARGER_TYPE_UNSPECIFIED 0 Default type. EV_CHARGER_TYPE_AC 1 The EV charging station supports AC charging only. EV_CHARGER_TYPE_DC 2 The EV charging station supports DC charging only. EV_CHARGER_TYPE_HYBRID 3 The EV charging station supports both AC and DC. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/#invertertype","title":"InverterType","text":"<p>Enumerated inverter types.</p> Name Number Description INVERTER_TYPE_UNSPECIFIED 0 Unspecified. INVERTER_TYPE_BATTERY 1 Battery inverter. INVERTER_TYPE_SOLAR 2 Solar inverter. INVERTER_TYPE_HYBRID 3 Hybrid inverter."},{"location":"protobuf-reference/frequenz/api/common/v1/components/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/location/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/location/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/location.proto</p> <ul> <li>Location</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/location/#frequenzapicommonv1locationproto","title":"frequenz/api/common/v1/location.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/location/#location","title":"Location","text":"<p>A pair of geographical co-ordinates, representing the location of a place.</p> Field Type Label Description latitude float Latitude ranges from -90 (South) to 90 (North) longitude float Longitude ranges from -180 (West) to 180 (East) country_code string Country ISO 3166-1 Alpha 2"},{"location":"protobuf-reference/frequenz/api/common/v1/location/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/metrics.proto</p> <ul> <li>AggregatedMetricSample</li> <li>Bounds</li> <li>MetricSampleVariant</li> <li> <p>SimpleMetricSample</p> </li> <li> <p>Metric</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#frequenzapicommonv1metricsproto","title":"frequenz/api/common/v1/metrics.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#aggregatedmetricsample","title":"AggregatedMetricSample","text":"<p>Encapsulates derived statistical summaries of a single metric.</p> <p>The message allows for the reporting of statistical summaries \u2014 minimum, maximum, and average values - as well as the complete list of individual samples if available.</p> <p>This message represents derived metrics and contains fields for statistical summaries\u2014minimum, maximum, and average values. Individual measurements and bounds are optional, accommodating scenarios where only subsets of this information are available.</p> <p>Note</p> Field Type Label Description sampled_at google.protobuf.Timestamp The UTC timestamp indicating the period over which the data was aggregated or derived. avg_value float The derived average value of the metric. min_value float optional The minimum measured value of the metric. max_value float optional The maximum measured value of the metric. raw_values float repeated Optional array of all the raw individual values. bounds Bounds repeated List of bounds that apply to the metric sample. <p>These bounds adapt in real-time to reflect the operating conditions at the time of aggregation or derivation.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#relationship-between-bounds-and-metric-samples","title":"Relationship Between Bounds and Metric Samples","text":"<p>Suppose a metric sample for current has an average value of <code>10A</code>. For the system to accept a charge command, clients need to request current values within the bounds.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#multiple-bounds","title":"Multiple Bounds","text":"<p>In the case of certain components like batteries, multiple bounds might exist. These multiple bounds collectively extend the range of allowable values, effectively forming a union of all given bounds. In such cases, the value of the metric must be within at least one of the bounds. In accordance with the passive sign convention, bounds that limit discharge would have negative numbers, while those limiting charge, such as for the State of Power (SoP) metric, would be positive. Hence bounds can have positive and negative values depending on the metric they represent.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#example","title":"Example","text":"<p>The diagram below illustrates the relationship between the bounds. <code>bound[0].lower bound[1].upper &amp;lt;-------|============|------------------|============|---------&amp;gt; bound[0].upper bound[1].lower</code> ---- values here are disallowed and will be rejected ==== values here are allowed and will be accepted |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#bounds","title":"Bounds","text":"<p>A set of lower and upper bounds for any metric. The units of the bounds are always the same as the related metric.</p> Field Type Label Description lower float optional The lower bound. If absent, there is no lower bound. upper float optional The upper bound. If absent, there is no upper bound. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#metricsamplevariant","title":"MetricSampleVariant","text":"<p>MetricSampleVariant serves as a union type that can encapsulate either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>.</p> <p>This message is designed to offer flexibility in capturing different granularities of metric samples\u2014either a simple single-point measurement or an aggregated set of measurements for a metric.</p> <p>A <code>MetricSampleVariant</code> can hold either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>, but not both simultaneously. Setting one will nullify the other.</p> Field Type Label Description simple_metric SimpleMetricSample aggregated_metric AggregatedMetricSample <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#simplemetricsample","title":"SimpleMetricSample","text":"<p>Represents a simple metric sample with an array of real-time system-defined bounds.</p> <p>Note</p> <p>This represents a single sample of a specific metric, the value of which is either measured or derived at a particular time. The real-time system-defined bounds are optional and may not always be present or set.</p> <p>Usage</p> Field Type Label Description sampled_at google.protobuf.Timestamp The UTC timestamp of when the data was either measured or derived. value float The value of the metric, which could be either measured or derived. bounds Bounds repeated List of bounds that apply to the metric sample. <p>These bounds adapt in real-time to reflect the operating conditions at the time of sampling.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#interplay-between-bounds-and-metric-samples","title":"Interplay Between Bounds and Metric Samples","text":"<p>Consider a scenario where a metric sample for battery charging power is registered at <code>10kW</code>. If there is a request to change the battery's charging power, the proposed power level must align with the existing bounds. Failure to do so will result in the command being rejected.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#multiple-bounds_1","title":"Multiple Bounds","text":"<p>In the case of certain components like batteries, multiple bounds might exist. These multiple bounds collectively extend the range of allowable values, effectively forming a union of all given bounds. In such cases, the value of the metric must be within at least one of the bounds. In accordance with the passive sign convention, bounds that limit discharge would have negative numbers, while those limiting charge, such as for the State of Power (SoP) metric, would be positive. Hence bounds can have positive and negative values depending on the metric they represent.</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#example_1","title":"Example","text":"<p>The diagram below illustrates the relationship between the bounds. <code>bound[0].lower bound[1].upper &amp;lt;-------|============|------------------|============|---------&amp;gt; bound[0].upper bound[1].lower</code> ---- values here are disallowed and will be rejected ==== values here are allowed and will be accepted |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#metric","title":"Metric","text":"<p>List of supported metrics.</p> Name Number Description METRIC_UNSPECIFIED 0 Default value. METRIC_DC_VOLTAGE 1 DC electricity metrics METRIC_DC_CURRENT 2 METRIC_DC_POWER 3 METRIC_AC_FREQUENCY 10 General AC electricity metrics METRIC_AC_VOLTAGE 11 METRIC_AC_VOLTAGE_PHASE_1 12 METRIC_AC_VOLTAGE_PHASE_2 13 METRIC_AC_VOLTAGE_PHASE_3 14 METRIC_AC_APPARENT_CURRENT 15 METRIC_AC_APPARENT_CURRENT_PHASE_1 16 METRIC_AC_APPARENT_CURRENT_PHASE_2 17 METRIC_AC_APPARENT_CURRENT_PHASE_3 18 METRIC_AC_APPARENT_POWER 20 AC power metrics METRIC_AC_APPARENT_POWER_PHASE_1 21 METRIC_AC_APPARENT_POWER_PHASE_2 22 METRIC_AC_APPARENT_POWER_PHASE_3 23 METRIC_AC_ACTIVE_POWER 24 METRIC_AC_ACTIVE_POWER_PHASE_1 25 METRIC_AC_ACTIVE_POWER_PHASE_2 26 METRIC_AC_ACTIVE_POWER_PHASE_3 27 METRIC_AC_REACTIVE_POWER 28 METRIC_AC_REACTIVE_POWER_PHASE_1 29 METRIC_AC_REACTIVE_POWER_PHASE_2 30 METRIC_AC_REACTIVE_POWER_PHASE_3 31 METRIC_AC_POWER_FACTOR 40 AC Power factor METRIC_AC_POWER_FACTOR_PHASE_1 41 METRIC_AC_POWER_FACTOR_PHASE_2 42 METRIC_AC_POWER_FACTOR_PHASE_3 43 METRIC_AC_APPARENT_ENERGY 50 AC energy metrics METRIC_AC_APPARENT_ENERGY_PHASE_1 51 METRIC_AC_APPARENT_ENERGY_PHASE_2 52 METRIC_AC_APPARENT_ENERGY_PHASE_3 53 METRIC_AC_ACTIVE_ENERGY 54 METRIC_AC_ACTIVE_ENERGY_PHASE_1 55 METRIC_AC_ACTIVE_ENERGY_PHASE_2 56 METRIC_AC_ACTIVE_ENERGY_PHASE_3 57 METRIC_AC_ACTIVE_ENERGY_CONSUMED 58 METRIC_AC_ACTIVE_ENERGY_CONSUMED_PHASE_1 59 METRIC_AC_ACTIVE_ENERGY_CONSUMED_PHASE_2 60 METRIC_AC_ACTIVE_ENERGY_CONSUMED_PHASE_3 61 METRIC_AC_ACTIVE_ENERGY_DELIVERED 62 METRIC_AC_ACTIVE_ENERGY_DELIVERED_PHASE_1 63 METRIC_AC_ACTIVE_ENERGY_DELIVERED_PHASE_2 64 METRIC_AC_ACTIVE_ENERGY_DELIVERED_PHASE_3 65 METRIC_AC_REACTIVE_ENERGY 66 METRIC_AC_REACTIVE_ENERGY_PHASE_1 67 METRIC_AC_REACTIVE_ENERGY_PHASE_2 69 METRIC_AC_REACTIVE_ENERGY_PHASE_3 70 METRIC_AC_THD_CURRENT 80 AC harmonics METRIC_AC_THD_CURRENT_PHASE_1 81 METRIC_AC_THD_CURRENT_PHASE_2 82 METRIC_AC_THD_CURRENT_PHASE_3 83 METRIC_BATTERY_CAPACITY 101 General BMS metrics. METRIC_BATTERY_SOC_PCT 102 METRIC_BATTERY_SOP_CHARGE 103 METRIC_BATTERY_SOP_DISCHARGE 104 METRIC_BATTERY_TEMPERATURE 105 METRIC_INVERTER_TEMPERATURE 120 General inverter metrics. METRIC_EV_CHARGER_TEMPERATURE 140 EV charging station metrics. METRIC_SENSOR_WIND_SPEED 160 General sensor metrics METRIC_SENSOR_WIND_DIRECTION 162 METRIC_SENSOR_TEMPERATURE 163 METRIC_SENSOR_RELATIVE_HUMIDITY 164 METRIC_SENSOR_DEW_POINT 165 METRIC_SENSOR_AIR_PRESSURE 166 METRIC_SENSOR_IRRADIANCE 167"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/pagination.proto</p> <ul> <li>PaginationInfo</li> <li>PaginationParams</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/#frequenzapicommonv1paginationproto","title":"frequenz/api/common/v1/pagination.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/#paginationinfo","title":"PaginationInfo","text":"<p>A message providing metadata about paginated list results. The PaginationInfo message delivers metadata concerning the paginated list results and should be appended to the response message of a list request. The total_items field must be set to the total count of items that adhere to the filter criteria defined in the request. The next_page_token field should be populated with the token to be used in the subsequent request to fetch the next page of results. If there are no additional results, the next_page_token field should be omitted.</p> Field Type Label Description total_items uint32 The total number of items that match the filter criteria defined in the request. next_page_token string optional Token for retrieving the next set of results. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/#paginationparams","title":"PaginationParams","text":"<p>A message defining parameters for paginating list requests. It can be appended to a request message to specify the desired page of results and the maximum number of results per page. For initial requests (requesting the first page), the page_token should not be provided. For subsequent requests (requesting any page after the first), the next_page_token from the previous responses PaginationInfo must be supplied. The page_size should only be specified in the initial request and will be disregarded in subsequent requests.</p> Field Type Label Description page_size uint32 optional The maximum number of results to be returned per request. page_token string optional The token identifying a specific page of the list results."},{"location":"protobuf-reference/frequenz/api/common/v1/pagination/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/sensors/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/sensors/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/sensors.proto</p> <ul> <li>SensorCategory</li> <li>SensorMetric</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/sensors/#frequenzapicommonv1sensorsproto","title":"frequenz/api/common/v1/sensors.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/sensors/#sensorcategory","title":"SensorCategory","text":"<p>Enumerated sensor categories.</p> Name Number Description SENSOR_CATEGORY_UNSPECIFIED 0 Unspecified SENSOR_CATEGORY_THERMOMETER 1 Thermometer (temperature sensor) SENSOR_CATEGORY_HYGROMETER 2 Hygrometer (humidity sensor) SENSOR_CATEGORY_BAROMETER 3 Barometer (pressure sensor). SENSOR_CATEGORY_PYRANOMETER 4 Pyranometer (solar irradiance sensor). SENSOR_CATEGORY_ANEMOMETER 5 Anemometer (wind velocity and direction sensor). SENSOR_CATEGORY_ACCELEROMETER 6 Accelerometers (acceleration sensor). SENSOR_CATEGORY_GENERAL 7 General sensors, which do not fall in any of the above categories <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/sensors/#sensormetric","title":"SensorMetric","text":"<p>Enumrated sensor metrics.</p> Name Number Description SENSOR_METRIC_UNSPECIFIED 0 Unspecified. SENSOR_METRIC_TEMPERATURE 1 Temperature. In Celsius (\u00b0C). SENSOR_METRIC_HUMIDITY 2 Humidity In percentage (%). SENSOR_METRIC_PRESSURE 3 Pressure In Pascal (Pa). SENSOR_METRIC_IRRADIANCE 4 Irradiance / Radiation flux In watts per square meter (W / m^2). SENSOR_METRIC_VELOCITY 5 Velocity In meters per second (m / s). SENSOR_METRIC_ACCELERATION 6 Acceleration. In meters per second per second (m / s^2) SENSOR_METRIC_ANGLE 7 Metric to represent angles, for metrics like direction. In angles with respect to the (magnetic) North (\u00b0). SENSOR_METRIC_DEW_POINT 8 Dew point. The temperature at which the air becomes saturated with water vapor. <p>In Celsius (\u00b0C). |</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/sensors/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/components/data.proto</p> <ul> <li>ComponentData</li> <li>ComponentData.MetricSample</li> <li>ComponentData.State</li> <li> <p>ComponentError</p> </li> <li> <p>ComponentErrorCode</p> </li> <li>ComponentState</li> <li>ErrorLevel</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#frequenzapicommonv1componentsdataproto","title":"frequenz/api/common/v1/components/data.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#componentdata","title":"ComponentData","text":"<p>ComponentData message aggregates multiple metrics, operational states, and errors, related to a specific microgrid component.</p> <p>Example</p> <p>Example output structure: ``` {   \"metric_samples\": [     {       \"metric\": \"DC_VOLTAGE_V\",       \"value\": {         \"simple_metric\": {           \"sampled_at\": \"2023-10-19T14:15:22.123456789Z\",           \"value\": 48.2,           \"bounds\": [{ \"lower\": 45.0, \"upper\": 50.0 }]         }       }     },     {       \"metric\": \"DC_CURRENT_A\",       \"value\": {         \"aggregated_metric\": {           \"sampled_at\": \"2023-10-19T14:15:22.123456789Z\",           \"avg_value\": 10.2,           \"min_value\": 9.8,           \"max_value\": 10.6,           \"list_values\": [9.8, 10.1, 10.6],           \"bounds\": [             { \"lower\": -20.0, \"upper\": -5.0 },             { \"lower\": 5.0, \"upper\": 20.0 }           ]         }       }     }   ],   \"states\": [     {       \"sampled_at\": \"2023-10-19T14:15:22.123456789Z\",       \"state\": [\"COMPONENT_STATE_CHARGING\"],       \"errors\": []     },     {       \"sampled_at\": \"2023-10-19T14:00:00.000000000Z\",       \"state\": [\"COMPONENT_STATE_ERROR\"],       \"errors\": [\"COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR\"]     }   ] }</p> <p>```</p> Field Type Label Description metric_samples ComponentData.MetricSample repeated List of measurements for a metric of the specific microgrid component. states ComponentData.State repeated List of states of a specific microgrid component. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#componentdatametricsample","title":"ComponentData.MetricSample","text":"<p>Representation of a sampled metric along with its value.</p> Field Type Label Description metric frequenz.api.common.v1.metrics.Metric The metric that was sampled. sample frequenz.api.common.v1.metrics.MetricSampleVariant The value of the sampled metric. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#componentdatastate","title":"ComponentData.State","text":"<p>Representation of a component state and errors.</p> Field Type Label Description sampled_at google.protobuf.Timestamp The time at which the state was sampled. states ComponentState repeated List if states of the microgrid component. <p>!!! note The list will contain unique members. No state will exist twice in this list. | | errors | ComponentError | repeated | List of errors for the microgrid component.</p> <p>!!! note The list of errors is supposed to be populated only if the component is in an error state.</p> <p>!!! note The list will contain unique members. No error will exist twice in this list. |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#componenterror","title":"ComponentError","text":"<p>ComponentError message represents an error that occurred in a microgrid component.</p> Field Type Label Description code ComponentErrorCode The error code. level ErrorLevel THe error level, indicating if it is a warning or a critical error <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#componenterrorcode","title":"ComponentErrorCode","text":"<p>A representation of all possible errors that can occur across all component categories.</p> Name Number Description COMPONENT_ERROR_CODE_UNSPECIFIED 0 Default value. No specific error is specified. COMPONENT_ERROR_CODE_UNKNOWN 1 The component is reporting an unknown or an undefined error, and the sender cannot parse the component error to any of the variants below. COMPONENT_ERROR_CODE_SWITCH_ON_FAULT 2 Error indicating that the component could not be switched on. COMPONENT_ERROR_CODE_UNDERVOLTAGE 3 Error indicating that the component is operating under the minimum rated voltage. COMPONENT_ERROR_CODE_OVERVOLTAGE 4 Error indicating that the component is operating over the maximum rated voltage. COMPONENT_ERROR_CODE_OVERCURRENT 5 Error indicating that the component is drawing more current than the maximum rated value. COMPONENT_ERROR_CODE_OVERCURRENT_CHARGING 6 Error indicating that the component's consumption current is over the maximum rated value during charging. COMPONENT_ERROR_CODE_OVERCURRENT_DISCHARGING 7 Error indicating that the component's production current is over the maximum rated value during discharging. COMPONENT_ERROR_CODE_OVERTEMPERATURE 8 Error indicating that the component is operating over the maximum rated temperature. COMPONENT_ERROR_CODE_UNDERTEMPERATURE 9 Error indicating that the component is operating under the minimum rated temperature. COMPONENT_ERROR_CODE_HIGH_HUMIDITY 10 Error indicating that the component is exposed to high humidity levels over the maximum rated value. COMPONENT_ERROR_CODE_FUSE_ERROR 11 Error indicating that the component's fuse has blown. COMPONENT_ERROR_CODE_PRECHARGE_ERROR 12 Error indicating that the component's precharge unit has failed. COMPONENT_ERROR_CODE_PLAUSIBILITY_ERROR 13 Error indicating plausibility issues within the system involving this component. COMPONENT_ERROR_CODE_UNDERVOLTAGE_SHUTDOWN 14 Error indicating system shutdown due to undervoltage involving this component. COMPONENT_ERROR_CODE_EV_UNEXPECTED_PILOT_FAILURE 15 Error indicating unexpected pilot failure in an electric vehicle (EV) component. COMPONENT_ERROR_CODE_FAULT_CURRENT 16 Error indicating fault current detected in the component. COMPONENT_ERROR_CODE_SHORT_CIRCUIT 17 Error indicating a short circuit detected in the component. COMPONENT_ERROR_CODE_CONFIG_ERROR 18 Error indicating a configuration error related to the component. COMPONENT_ERROR_CODE_ILLEGAL_COMPONENT_STATE_REQUESTED 19 Error indicating an illegal state requested for the component. COMPONENT_ERROR_CODE_HARDWARE_INACCESSIBLE 20 Error indicating that the hardware of the component is inaccessible. COMPONENT_ERROR_CODE_INTERNAL 21 Error indicating an internal error within the component. COMPONENT_ERROR_CODE_UNAUTHORIZED 22 Error indicating that the component is unauthorized to perform the last requested action. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_STATION 40 Error indicating electric vehicle (EV) cable was abruptly unplugged from the charging station. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_EV 41 Error indicating electric vehicle (EV) cable was abruptly unplugged from the vehicle. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_LOCK_FAILED 42 Error indicating electric vehicle (EV) cable lock failure. COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_INVALID 43 Error indicating an invalid electric vehicle (EV) cable. COMPONENT_ERROR_CODE_EV_CONSUMER_INCOMPATIBLE 44 Error indicating an incompatible electric vehicle (EV) plug. COMPONENT_ERROR_CODE_BATTERY_IMBALANCE 50 Error indicating a battery system imbalance. COMPONENT_ERROR_CODE_BATTERY_LOW_SOH 51 Error indicating a low state of health (SOH) detected in the battery. COMPONENT_ERROR_CODE_BATTERY_BLOCK_ERROR 52 Error indicating a battery block error. COMPONENT_ERROR_CODE_BATTERY_CONTROLLER_ERROR 53 Error indicating a battery controller error. COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR 54 Error indicating a battery relay error. COMPONENT_ERROR_CODE_BATTERY_CALIBRATION_NEEDED 56 Error indicating that battery calibration is needed. COMPONENT_ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED 60 Error indicating that the relays have been cycled for the maximum number of times. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#componentstate","title":"ComponentState","text":"<p>Enum to represent the various states that a component can be in. This enum is unified across all component categories for consistency.</p> Name Number Description COMPONENT_STATE_UNSPECIFIED 0 Default value when the component state is not explicitly set. This is the zero value of the enum. COMPONENT_STATE_UNKNOWN 1 State when the component is in an unknown or undefined condition. This is used when the sender is unable to classify the component into any other state. COMPONENT_STATE_UNAVAILABLE 2 State when the component is temporarily unavailable for operation. COMPONENT_STATE_SWITCHING_OFF 3 State when the component is in the process of switching off. COMPONENT_STATE_OFF 4 State when the component has successfully switched off. COMPONENT_STATE_SWITCHING_ON 5 State when the component is in the process of switching on from an off state. COMPONENT_STATE_STANDBY 6 State when the component is in standby mode, and not immediately ready for immediate operations. COMPONENT_STATE_READY 7 State when the component is fully operational and ready for use. COMPONENT_STATE_CHARGING 8 State when the component is actively consuming energy. COMPONENT_STATE_DISCHARGING 9 State when the component is actively producing or releasing energy. COMPONENT_STATE_ERROR 10 State when the component is in an error state and may need attention. COMPONENT_STATE_EV_CHARGING_CABLE_UNPLUGGED 20 The Electric Vehicle (EV) charging cable is unplugged from the charging station. COMPONENT_STATE_EV_CHARGING_CABLE_PLUGGED_AT_STATION 21 The EV charging cable is plugged into the charging station. COMPONENT_STATE_EV_CHARGING_CABLE_PLUGGED_AT_EV 22 The EV charging cable is plugged into the vehicle. COMPONENT_STATE_EV_CHARGING_CABLE_LOCKED_AT_STATION 23 The EV charging cable is locked at the charging station end, indicating readiness for charging. COMPONENT_STATE_EV_CHARGING_CABLE_LOCKED_AT_EV 24 The EV charging cable is locked at the vehicle end, indicating that charging is active. COMPONENT_STATE_RELAY_OPEN 30 The relay is in an open state, meaning no current can flow through. COMPONENT_STATE_RELAY_CLOSED 31 The relay is in a closed state, allowing current to flow. COMPONENT_STATE_PRECHARGER_OPEN 40 The precharger circuit is open, meaning it's not currently active. COMPONENT_STATE_PRECHARGER_PRECHARGING 41 The precharger is in a precharging state, preparing the main circuit for activation. COMPONENT_STATE_PRECHARGER_CLOSED 42 The precharger circuit is closed, allowing full current to flow to the main circuit. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#errorlevel","title":"ErrorLevel","text":"<p>A representation of all possible error levels that an error can have.</p> Name Number Description ERROR_LEVEL_UNSPECIFIED 0 Default value. No specific error-level is specified. ERROR_LEVEL_WARN 1 The associated error is a warning. Users are advised to take action to prevent the error from becoming critical. ERROR_LEVEL_CRITICAL 2 The associated error is critical. The associated component is very likely out-of-order, and needs immediate attention."},{"location":"protobuf-reference/frequenz/api/common/v1/components/data/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/common/v1/metrics/electrical.proto</p> <ul> <li>AC</li> <li>AC.ACPhase</li> <li>AC.ActiveEnergy</li> <li>AC.Harmonics</li> <li>AC.ReactiveEnergy</li> <li>DC</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#frequenzapicommonv1metricselectricalproto","title":"frequenz/api/common/v1/metrics/electrical.proto","text":""},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#ac","title":"AC","text":"<p>The current state and metrics of the electrical connections to the inverter.</p> Field Type Label Description frequency frequenz.api.common.v1.metrics.SimpleMetricSample The AC frequency. In Hertz (Hz). current frequenz.api.common.v1.metrics.SimpleMetricSample The apparent 3-phase AC current. Positive values represent apparent energy flowing towards the grid connection, and vice versa. In Ampere (A). power_apparent frequenz.api.common.v1.metrics.SimpleMetricSample The apparent 3-phase AC power. Positive values represent apparent energy flowing towards the grid connection, and vice versa. In Volt-Ampere (VA). power_active frequenz.api.common.v1.metrics.SimpleMetricSample The total active 3-phase AC active power. +ve power means consumption, away from the grid. -ve power means supply into the grid. In Watt (W). power_reactive frequenz.api.common.v1.metrics.SimpleMetricSample The reactive 3-phase AC power. +ve power means inductive (leading). -ve power means capacitive (lagging). In Volt-Ampere reactive (VAr). energy_apparent frequenz.api.common.v1.metrics.SimpleMetricSample The total 3-phase apparent energy. A positive value represents the net apparent energy supplied to the grid connection, and vice versa. In Volt-Ampere-hour (VAh). energy_active AC.ActiveEnergy The total 3-phase active energy counters for the underlying component's consumption and supply. In Watt-hour (Wh). energy_reactive AC.ReactiveEnergy The total 3-phase reactive energy counters for the underlying component's capacitive and inductive energy values. In Volt-Ampere reactive hour (VArh). FIXME: ReactiveEnergy says Volt-Ampere-hour (VAh). harmonics_power_active AC.Harmonics The sums of the harmonics of the instantaneous active power at the component across all 3 phases. thd_power_active float The sums of the total harmonic distortion of the instantaneous active power at the component across all 3 phases. phase_1 AC.ACPhase AC metrics for phase/line 1. phase_2 AC.ACPhase AC metrics for phase/line 2. phase_3 AC.ACPhase AC metrics for phase/line 3. <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#acacphase","title":"AC.ACPhase","text":"<p>AC metrics of a single phase.</p> Field Type Label Description voltage frequenz.api.common.v1.metrics.SimpleMetricSample The AC voltage between the line and the neutral wire. In Volt (V). current frequenz.api.common.v1.metrics.SimpleMetricSample AC current. +ve current means consumption, away from the grid. -ve current means supply into the grid. In Ampere (A). power_active frequenz.api.common.v1.metrics.SimpleMetricSample AC active power. +ve power means consumption, away from the grid. -ve power means supply into the grid. In Watt (W). power_reactive frequenz.api.common.v1.metrics.SimpleMetricSample AC reactive power. +ve power means inductive (leading). -ve power means capacitive (lagging). In Volt-Ampere reactive (VAr). energy_apparent frequenz.api.common.v1.metrics.SimpleMetricSample The total apparent energy. A Positive value represents the net apparent energy supplied to the grid connection, and vice versa. In Volt-Ampere-hour (VAh). energy_active AC.ActiveEnergy The total active energy counters for the underlying component's consumption and supply. In Watt-hour (Wh). energy_reactive AC.ReactiveEnergy The total reactive energy counters for the underlying component's capacitive and inductive energy values. In Volt-Ampere reactive hour (VArh). harmonics_power_active AC.Harmonics Harmonics of the instantaneous active power at the component. In percent (%). thd_power_active float Total harmonic distortion of the instantaneous active power at the component. In percent (%). <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#acactiveenergy","title":"AC.ActiveEnergy","text":"<p>The active energy the inverter is consuming or generating.</p> Field Type Label Description energy frequenz.api.common.v1.metrics.SimpleMetricSample The sum of the consumed and delivered energy. This is a signed value in passive sign convention: if more energy is consumed than delivered, this is a -ve number, otherwise +ve. In Watt-hour (Wh). energy_consumed frequenz.api.common.v1.metrics.SimpleMetricSample The consumed energy. In Watt-hour (Wh). energy_delivered frequenz.api.common.v1.metrics.SimpleMetricSample The delivered energy. In Watt-hour (Wh). <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#acharmonics","title":"AC.Harmonics","text":"<p>The harmonics of the fast Fourier transform of the instantaneous values and its total harmonic distortion. In percent (%).</p> Field Type Label Description harmonic_1 float harmonic_2 float harmonic_3 float harmonic_4 float harmonic_5 float harmonic_6 float harmonic_7 float harmonic_8 float harmonic_9 float harmonic_10 float harmonic_11 float <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#acreactiveenergy","title":"AC.ReactiveEnergy","text":"<p>The reactive energy the inverter is consuming or generating.</p> Field Type Label Description energy frequenz.api.common.v1.metrics.SimpleMetricSample The sum of the capacitive and inductive energy. This is a signed value. If more energy is capacitive than inductive, this is a -ve number, otherwise +ve. In Volt-Ampere-hour (VArh). energy_capacitive frequenz.api.common.v1.metrics.SimpleMetricSample The capacitive energy. In Volt-Ampere-hour (VArh). energy_inductive frequenz.api.common.v1.metrics.SimpleMetricSample The inductive energy. In Volt-Ampere-hour (VArh). <p></p>"},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#dc","title":"DC","text":"<p>Metrics of a DC electrical connection.</p> Field Type Label Description voltage frequenz.api.common.v1.metrics.SimpleMetricSample The DC voltage across the component. In Volt (V). current frequenz.api.common.v1.metrics.SimpleMetricSample The DC current flowing away from the grid connection. In passive sign convention: +ve current means consumption, away from the grid. -ve current means supply into the grid. In Ampere (A). power frequenz.api.common.v1.metrics.SimpleMetricSample The DC power flowing away from the grid connection. In passive sign convention: +ve power means consumption, away from the grid. -ve power means supply into the grid. In Watt (W)."},{"location":"protobuf-reference/frequenz/api/common/v1/metrics/electrical/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"python-reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>frequenz<ul> <li>api<ul> <li>common<ul> <li>v1<ul> <li>components<ul> <li>data_pb2</li> <li>data_pb2_grpc</li> </ul> </li> <li>components_pb2</li> <li>components_pb2_grpc</li> <li>location_pb2</li> <li>location_pb2_grpc</li> <li>metrics<ul> <li>electrical_pb2</li> <li>electrical_pb2_grpc</li> </ul> </li> <li>metrics_pb2</li> <li>metrics_pb2_grpc</li> <li>pagination_pb2</li> <li>pagination_pb2_grpc</li> <li>sensors_pb2</li> <li>sensors_pb2_grpc</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"python-reference/frequenz/api/common/v1/","title":"v1","text":""},{"location":"python-reference/frequenz/api/common/v1/#frequenz.api.common.v1","title":"<code>frequenz.api.common.v1</code>","text":"<p>Frequenz common gRPC API and bindings.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/","title":"components_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2","title":"<code>frequenz.api.common.v1.components_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.BATTERY_TYPE_LI_ION","title":"<code>frequenz.api.common.v1.components_pb2.BATTERY_TYPE_LI_ION: BatteryType.ValueType</code>  <code>module-attribute</code>","text":"<p>Li-ion batteries.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.BATTERY_TYPE_NA_ION","title":"<code>frequenz.api.common.v1.components_pb2.BATTERY_TYPE_NA_ION: BatteryType.ValueType</code>  <code>module-attribute</code>","text":"<p>Sodium-ion batteries</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.BATTERY_TYPE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.components_pb2.BATTERY_TYPE_UNSPECIFIED: BatteryType.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_BATTERY","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_BATTERY: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A storage system for electrical energy, used by inverters.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_CHP","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_CHP: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A heat and power combustion plant (CHP stands for combined heat and power).</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_CONVERTER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_CONVERTER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A DC-DC converter.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_CRYPTO_MINER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_CRYPTO_MINER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A crypto miner.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_ELECTROLYZER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_ELECTROLYZER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>An electrolyzer for converting water into hydrogen and oxygen.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_EV_CHARGER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_EV_CHARGER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A station for charging electrical vehicles.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_FUSE","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_FUSE: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A fuse. Fuses are used to protect electrical components from overcurrents.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_GRID","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_GRID: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>The point where the local microgrid is connected to the grid.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_INVERTER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_INVERTER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>An electricity generator, with batteries or solar energy.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_METER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_METER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A meter, for measuring electrical metrics, e.g., current, voltage, etc.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_PRECHARGER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_PRECHARGER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A precharge module. Precharging involves gradually ramping up the DC voltage to prevent any potential damage to sensitive electrical components like capacitors. While many inverters and batteries come equipped with in-built precharging mechanisms, some may lack this feature. In such cases, we need to use external precharging modules.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_RELAY","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_RELAY: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A relay. Relays generally have two states: open (connected) and closed (disconnected). They are generally placed in front of a component, e.g., an inverter, to control whether the component is connected to the grid or not.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_UNSPECIFIED","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_UNSPECIFIED: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>An unknown component categories, useful for error handling, and marking unknown components in a list of components with otherwise known categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_VOLTAGE_TRANSFORMER","title":"<code>frequenz.api.common.v1.components_pb2.COMPONENT_CATEGORY_VOLTAGE_TRANSFORMER: ComponentCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>A voltage transformer. Voltage transformers are used to step up or step down the voltage, keeping the power somewhat constant by increasing or decreasing the current. If voltage is stepped up, current is stepped down, and vice versa. Note that voltage transformers have efficiency losses, so the output power is always less than the input power.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_AC","title":"<code>frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_AC: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging station supports AC charging only.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_DC","title":"<code>frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_DC: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging station supports DC charging only.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_HYBRID","title":"<code>frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_HYBRID: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging station supports both AC and DC.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.components_pb2.EV_CHARGER_TYPE_UNSPECIFIED: EvChargerType.ValueType</code>  <code>module-attribute</code>","text":"<p>Default type.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.INVERTER_TYPE_BATTERY","title":"<code>frequenz.api.common.v1.components_pb2.INVERTER_TYPE_BATTERY: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Battery inverter.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.INVERTER_TYPE_HYBRID","title":"<code>frequenz.api.common.v1.components_pb2.INVERTER_TYPE_HYBRID: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Hybrid inverter.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.INVERTER_TYPE_SOLAR","title":"<code>frequenz.api.common.v1.components_pb2.INVERTER_TYPE_SOLAR: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Solar inverter.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.INVERTER_TYPE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.components_pb2.INVERTER_TYPE_UNSPECIFIED: InverterType.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.BatteryType","title":"<code>frequenz.api.common.v1.components_pb2.BatteryType</code>","text":"<p>             Bases: <code>_BatteryType</code></p> <p>Enumerated battery types.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.ComponentCategory","title":"<code>frequenz.api.common.v1.components_pb2.ComponentCategory</code>","text":"<p>             Bases: <code>_ComponentCategory</code></p> <p>Enumrated component categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.EvChargerType","title":"<code>frequenz.api.common.v1.components_pb2.EvChargerType</code>","text":"<p>             Bases: <code>_EvChargerType</code></p> <p>Enumerated EV charger types.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2/#frequenz.api.common.v1.components_pb2.InverterType","title":"<code>frequenz.api.common.v1.components_pb2.InverterType</code>","text":"<p>             Bases: <code>_InverterType</code></p> <p>Enumerated inverter types.</p>"},{"location":"python-reference/frequenz/api/common/v1/components_pb2_grpc/","title":"components_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/components_pb2_grpc/#frequenz.api.common.v1.components_pb2_grpc","title":"<code>frequenz.api.common.v1.components_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/","title":"location_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2","title":"<code>frequenz.api.common.v1.location_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location","title":"<code>frequenz.api.common.v1.location_pb2.Location</code>","text":"<p>             Bases: <code>Message</code></p> <p>A pair of geographical co-ordinates, representing the location of a place.</p> Source code in <code>frequenz/api/common/v1/location_pb2.py</code> <pre><code>  _globals['_LOCATION']._serialized_start=74\n  _globals['_LOCATION']._serialized_end=143\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location.country_code","title":"<code>country_code: builtins.str</code>  <code>instance-attribute</code>","text":"<p>Country ISO 3166-1 Alpha 2</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location.latitude","title":"<code>latitude: builtins.float</code>  <code>instance-attribute</code>","text":"<p>Latitude ranges from -90 (South) to 90 (North)</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2/#frequenz.api.common.v1.location_pb2.Location.longitude","title":"<code>longitude: builtins.float</code>  <code>instance-attribute</code>","text":"<p>Longitude ranges from -180 (West) to 180 (East)</p>"},{"location":"python-reference/frequenz/api/common/v1/location_pb2_grpc/","title":"location_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/location_pb2_grpc/#frequenz.api.common.v1.location_pb2_grpc","title":"<code>frequenz.api.common.v1.location_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/","title":"metrics_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2","title":"<code>frequenz.api.common.v1.metrics_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_AC_APPARENT_ENERGY","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_AC_APPARENT_ENERGY: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC energy metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_AC_APPARENT_POWER","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_AC_APPARENT_POWER: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC power metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_AC_FREQUENCY","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_AC_FREQUENCY: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General AC electricity metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_AC_POWER_FACTOR","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_AC_POWER_FACTOR: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC Power factor</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_AC_THD_CURRENT","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_AC_THD_CURRENT: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>AC harmonics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_BATTERY_CAPACITY","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_BATTERY_CAPACITY: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General BMS metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_DC_VOLTAGE","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_DC_VOLTAGE: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>DC electricity metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_EV_CHARGER_TEMPERATURE","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_EV_CHARGER_TEMPERATURE: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>EV charging station metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_INVERTER_TEMPERATURE","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_INVERTER_TEMPERATURE: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General inverter metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_SENSOR_WIND_SPEED","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_SENSOR_WIND_SPEED: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>General sensor metrics</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.METRIC_UNSPECIFIED","title":"<code>frequenz.api.common.v1.metrics_pb2.METRIC_UNSPECIFIED: Metric.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample","title":"<code>frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample</code>","text":"<p>             Bases: <code>Message</code></p> <p>Encapsulates derived statistical summaries of a single metric.</p> <p>The message allows for the reporting of statistical summaries \u2014 minimum, maximum, and average values - as well as the complete list of individual samples if available.</p> <p>This message represents derived metrics and contains fields for statistical summaries\u2014minimum, maximum, and average values. Individual measurements and bounds are optional, accommodating scenarios where only subsets of this information are available.</p> <p>Note</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample--relationship-between-bounds-and-metric-samples","title":"Relationship Between Bounds and Metric Samples","text":"<p>Suppose a metric sample for current has an average value of <code>10A</code>. For the system to accept a charge command, clients need to request current values within the bounds.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.avg_value","title":"<code>avg_value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The derived average value of the metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.bounds","title":"<code>bounds: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Bounds]</code>  <code>property</code>","text":"<p>List of bounds that apply to the metric sample.</p> <p>These bounds adapt in real-time to reflect the operating conditions at the time of aggregation or derivation.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.bounds--multiple-bounds","title":"Multiple Bounds","text":"<p>In the case of certain components like batteries, multiple bounds might exist. These multiple bounds collectively extend the range of allowable values, effectively forming a union of all given bounds. In such cases, the value of the metric must be within at least one of the bounds. In accordance with the passive sign convention, bounds that limit discharge would have negative numbers, while those limiting charge, such as for the State of Power (SoP) metric, would be positive. Hence bounds can have positive and negative values depending on the metric they represent.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.bounds--example","title":"Example","text":"<p>The diagram below illustrates the relationship between the bounds. <pre><code>     bound[0].lower                         bound[1].upper\n&lt;-------|============|------------------|============|---------&gt;\n               bound[0].upper      bound[1].lower\n</code></pre> ---- values here are disallowed and will be rejected ==== values here are allowed and will be accepted</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.max_value","title":"<code>max_value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The maximum measured value of the metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.min_value","title":"<code>min_value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The minimum measured value of the metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.raw_values","title":"<code>raw_values: google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]</code>  <code>property</code>","text":"<p>Optional array of all the raw individual values.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.AggregatedMetricSample.sampled_at","title":"<code>sampled_at: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The UTC timestamp indicating the period over which the data was aggregated or derived.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.Bounds","title":"<code>frequenz.api.common.v1.metrics_pb2.Bounds</code>","text":"<p>             Bases: <code>Message</code></p> <p>A set of lower and upper bounds for any metric. The units of the bounds are always the same as the related metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.Bounds-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.Bounds.lower","title":"<code>lower: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The lower bound. If absent, there is no lower bound.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.Bounds.upper","title":"<code>upper: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The upper bound. If absent, there is no upper bound.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.Metric","title":"<code>frequenz.api.common.v1.metrics_pb2.Metric</code>","text":"<p>             Bases: <code>_Metric</code></p> <p>List of supported metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.MetricSampleVariant","title":"<code>frequenz.api.common.v1.metrics_pb2.MetricSampleVariant</code>","text":"<p>             Bases: <code>Message</code></p> <p>MetricSampleVariant serves as a union type that can encapsulate either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>.</p> <p>This message is designed to offer flexibility in capturing different granularities of metric samples\u2014either a simple single-point measurement or an aggregated set of measurements for a metric.</p> <p>A <code>MetricSampleVariant</code> can hold either a <code>SimpleMetricSample</code> or an <code>AggregatedMetricSample</code>, but not both simultaneously. Setting one will nullify the other.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample","title":"<code>frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>","text":"<p>             Bases: <code>Message</code></p> <p>Represents a simple metric sample with an array of real-time system-defined bounds.</p> <p>Note</p> <p>This represents a single sample of a specific metric, the value of which is either measured or derived at a particular time. The real-time system-defined bounds are optional and may not always be present or set.</p> <p>Usage</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample--interplay-between-bounds-and-metric-samples","title":"Interplay Between Bounds and Metric Samples","text":"<p>Consider a scenario where a metric sample for battery charging power is registered at <code>10kW</code>. If there is a request to change the battery's charging power, the proposed power level must align with the existing bounds. Failure to do so will result in the command being rejected.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample.bounds","title":"<code>bounds: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Bounds]</code>  <code>property</code>","text":"<p>List of bounds that apply to the metric sample.</p> <p>These bounds adapt in real-time to reflect the operating conditions at the time of sampling.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample.bounds--multiple-bounds","title":"Multiple Bounds","text":"<p>In the case of certain components like batteries, multiple bounds might exist. These multiple bounds collectively extend the range of allowable values, effectively forming a union of all given bounds. In such cases, the value of the metric must be within at least one of the bounds. In accordance with the passive sign convention, bounds that limit discharge would have negative numbers, while those limiting charge, such as for the State of Power (SoP) metric, would be positive. Hence bounds can have positive and negative values depending on the metric they represent.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample.bounds--example","title":"Example","text":"<p>The diagram below illustrates the relationship between the bounds. <pre><code>   bound[0].lower                               bound[1].upper\n&lt;-------|============|------------------|============|---------&gt;\n               bound[0].upper     bound[1].lower\n</code></pre> ---- values here are disallowed and will be rejected ==== values here are allowed and will be accepted</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample.sampled_at","title":"<code>sampled_at: google.protobuf.timestamp_pb2.Timestamp</code>  <code>property</code>","text":"<p>The UTC timestamp of when the data was either measured or derived.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2/#frequenz.api.common.v1.metrics_pb2.SimpleMetricSample.value","title":"<code>value: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The value of the metric, which could be either measured or derived.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2_grpc/","title":"metrics_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics_pb2_grpc/#frequenz.api.common.v1.metrics_pb2_grpc","title":"<code>frequenz.api.common.v1.metrics_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/","title":"pagination_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2","title":"<code>frequenz.api.common.v1.pagination_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationInfo","title":"<code>frequenz.api.common.v1.pagination_pb2.PaginationInfo</code>","text":"<p>             Bases: <code>Message</code></p> <p>A message providing metadata about paginated list results. The PaginationInfo message delivers metadata concerning the paginated list results and should be appended to the response message of a list request. The total_items field must be set to the total count of items that adhere to the filter criteria defined in the request. The next_page_token field should be populated with the token to be used in the subsequent request to fetch the next page of results. If there are no additional results, the next_page_token field should be omitted.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationInfo-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationInfo.next_page_token","title":"<code>next_page_token: builtins.str</code>  <code>instance-attribute</code>","text":"<p>Token for retrieving the next set of results.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationInfo.total_items","title":"<code>total_items: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The total number of items that match the filter criteria defined in the request.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationParams","title":"<code>frequenz.api.common.v1.pagination_pb2.PaginationParams</code>","text":"<p>             Bases: <code>Message</code></p> <p>A message defining parameters for paginating list requests. It can be appended to a request message to specify the desired page of results and the maximum number of results per page. For initial requests (requesting the first page), the page_token should not be provided. For subsequent requests (requesting any page after the first), the next_page_token from the previous responses PaginationInfo must be supplied. The page_size should only be specified in the initial request and will be disregarded in subsequent requests.</p> Source code in <code>frequenz/api/common/v1/pagination_pb2.py</code> <pre><code>  _globals['_PAGINATIONPARAMS']._serialized_end=174\n  _globals['_PAGINATIONINFO']._serialized_start=176\n  _globals['_PAGINATIONINFO']._serialized_end=263\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationParams-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationParams.page_size","title":"<code>page_size: builtins.int</code>  <code>instance-attribute</code>","text":"<p>The maximum number of results to be returned per request.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2/#frequenz.api.common.v1.pagination_pb2.PaginationParams.page_token","title":"<code>page_token: builtins.str</code>  <code>instance-attribute</code>","text":"<p>The token identifying a specific page of the list results.</p>"},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2_grpc/","title":"pagination_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/pagination_pb2_grpc/#frequenz.api.common.v1.pagination_pb2_grpc","title":"<code>frequenz.api.common.v1.pagination_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/","title":"sensors_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2","title":"<code>frequenz.api.common.v1.sensors_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_ACCELEROMETER","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_ACCELEROMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Accelerometers (acceleration sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_ANEMOMETER","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_ANEMOMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Anemometer (wind velocity and direction sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_BAROMETER","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_BAROMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Barometer (pressure sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_GENERAL","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_GENERAL: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>General sensors, which do not fall in any of the above categories</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_HYGROMETER","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_HYGROMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Hygrometer (humidity sensor)</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_PYRANOMETER","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_PYRANOMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Pyranometer (solar irradiance sensor).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_THERMOMETER","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_THERMOMETER: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Thermometer (temperature sensor)</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_UNSPECIFIED","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_CATEGORY_UNSPECIFIED: SensorCategory.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_ACCELERATION","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_ACCELERATION: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Acceleration. In meters per second per second (m / s^2)</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_ANGLE","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_ANGLE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Metric to represent angles, for metrics like direction. In angles with respect to the (magnetic) North (\u00b0).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_DEW_POINT","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_DEW_POINT: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Dew point. The temperature at which the air becomes saturated with water vapor.</p> <p>In Celsius (\u00b0C).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_HUMIDITY","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_HUMIDITY: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Humidity In percentage (%).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_IRRADIANCE","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_IRRADIANCE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Irradiance / Radiation flux In watts per square meter (W / m^2).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_PRESSURE","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_PRESSURE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Pressure In Pascal (Pa).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_TEMPERATURE","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_TEMPERATURE: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Temperature. In Celsius (\u00b0C).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_UNSPECIFIED","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_UNSPECIFIED: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Unspecified.</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_VELOCITY","title":"<code>frequenz.api.common.v1.sensors_pb2.SENSOR_METRIC_VELOCITY: SensorMetric.ValueType</code>  <code>module-attribute</code>","text":"<p>Velocity In meters per second (m / s).</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SensorCategory","title":"<code>frequenz.api.common.v1.sensors_pb2.SensorCategory</code>","text":"<p>             Bases: <code>_SensorCategory</code></p> <p>Enumerated sensor categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2/#frequenz.api.common.v1.sensors_pb2.SensorMetric","title":"<code>frequenz.api.common.v1.sensors_pb2.SensorMetric</code>","text":"<p>             Bases: <code>_SensorMetric</code></p> <p>Enumrated sensor metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2_grpc/","title":"sensors_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/sensors_pb2_grpc/#frequenz.api.common.v1.sensors_pb2_grpc","title":"<code>frequenz.api.common.v1.sensors_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/","title":"components","text":""},{"location":"python-reference/frequenz/api/common/v1/components/#frequenz.api.common.v1.components","title":"<code>frequenz.api.common.v1.components</code>","text":"<p>Frequenz Common API definitions for metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/","title":"data_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2","title":"<code>frequenz.api.common.v1.components.data_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_BLOCK_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_BLOCK_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery block error.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_CALIBRATION_NEEDED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_CALIBRATION_NEEDED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that battery calibration is needed.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_CONTROLLER_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_CONTROLLER_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery controller error.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_IMBALANCE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_IMBALANCE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery system imbalance.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_LOW_SOH","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_LOW_SOH: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a low state of health (SOH) detected in the battery.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a battery relay error.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_CONFIG_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_CONFIG_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a configuration error related to the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_INVALID","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_INVALID: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an invalid electric vehicle (EV) cable.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_LOCK_FAILED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_LOCK_FAILED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating electric vehicle (EV) cable lock failure.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_EV","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_EV: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating electric vehicle (EV) cable was abruptly unplugged from the vehicle.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_STATION","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_STATION: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating electric vehicle (EV) cable was abruptly unplugged from the charging station.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CONSUMER_INCOMPATIBLE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_CONSUMER_INCOMPATIBLE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an incompatible electric vehicle (EV) plug.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_UNEXPECTED_PILOT_FAILURE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_EV_UNEXPECTED_PILOT_FAILURE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating unexpected pilot failure in an electric vehicle (EV) component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_FAULT_CURRENT","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_FAULT_CURRENT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating fault current detected in the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_FUSE_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_FUSE_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's fuse has blown.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_HARDWARE_INACCESSIBLE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_HARDWARE_INACCESSIBLE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the hardware of the component is inaccessible.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_HIGH_HUMIDITY","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_HIGH_HUMIDITY: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is exposed to high humidity levels over the maximum rated value.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_ILLEGAL_COMPONENT_STATE_REQUESTED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_ILLEGAL_COMPONENT_STATE_REQUESTED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an illegal state requested for the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_INTERNAL","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_INTERNAL: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating an internal error within the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERCURRENT","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERCURRENT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is drawing more current than the maximum rated value.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_CHARGING","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_CHARGING: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's consumption current is over the maximum rated value during charging.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_DISCHARGING","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERCURRENT_DISCHARGING: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's production current is over the maximum rated value during discharging.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERTEMPERATURE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERTEMPERATURE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating over the maximum rated temperature.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERVOLTAGE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_OVERVOLTAGE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating over the maximum rated voltage.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_PLAUSIBILITY_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_PLAUSIBILITY_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating plausibility issues within the system involving this component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_PRECHARGE_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_PRECHARGE_ERROR: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component's precharge unit has failed.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the relays have been cycled for the maximum number of times.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_SHORT_CIRCUIT","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_SHORT_CIRCUIT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating a short circuit detected in the component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_SWITCH_ON_FAULT","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_SWITCH_ON_FAULT: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component could not be switched on.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNAUTHORIZED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNAUTHORIZED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is unauthorized to perform the last requested action.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNDERTEMPERATURE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNDERTEMPERATURE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating under the minimum rated temperature.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating that the component is operating under the minimum rated voltage.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE_SHUTDOWN","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNDERVOLTAGE_SHUTDOWN: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Error indicating system shutdown due to undervoltage involving this component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNKNOWN","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNKNOWN: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>The component is reporting an unknown or an undefined error, and the sender cannot parse the component error to any of the variants below.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_ERROR_CODE_UNSPECIFIED: ComponentErrorCode.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value. No specific error is specified.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_CHARGING","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_CHARGING: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is actively consuming energy.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_DISCHARGING","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_DISCHARGING: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is actively producing or releasing energy.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_ERROR","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_ERROR: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in an error state and may need attention.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_LOCKED_AT_EV","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_LOCKED_AT_EV: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is locked at the vehicle end, indicating that charging is active.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_LOCKED_AT_STATION","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_LOCKED_AT_STATION: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is locked at the charging station end, indicating readiness for charging.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_PLUGGED_AT_EV","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_PLUGGED_AT_EV: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is plugged into the vehicle.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_PLUGGED_AT_STATION","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_PLUGGED_AT_STATION: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The EV charging cable is plugged into the charging station.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_UNPLUGGED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_EV_CHARGING_CABLE_UNPLUGGED: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The Electric Vehicle (EV) charging cable is unplugged from the charging station.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_OFF","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_OFF: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component has successfully switched off.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_PRECHARGER_CLOSED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_PRECHARGER_CLOSED: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The precharger circuit is closed, allowing full current to flow to the main circuit.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_PRECHARGER_OPEN","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_PRECHARGER_OPEN: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The precharger circuit is open, meaning it's not currently active.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_PRECHARGER_PRECHARGING","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_PRECHARGER_PRECHARGING: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The precharger is in a precharging state, preparing the main circuit for activation.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_READY","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_READY: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is fully operational and ready for use.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_RELAY_CLOSED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_RELAY_CLOSED: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The relay is in a closed state, allowing current to flow.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_RELAY_OPEN","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_RELAY_OPEN: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>The relay is in an open state, meaning no current can flow through.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_STANDBY","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_STANDBY: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in standby mode, and not immediately ready for immediate operations.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_SWITCHING_OFF","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_SWITCHING_OFF: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in the process of switching off.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_SWITCHING_ON","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_SWITCHING_ON: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in the process of switching on from an off state.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_UNAVAILABLE","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_UNAVAILABLE: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is temporarily unavailable for operation.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_UNKNOWN","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_UNKNOWN: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>State when the component is in an unknown or undefined condition. This is used when the sender is unable to classify the component into any other state.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_UNSPECIFIED","title":"<code>frequenz.api.common.v1.components.data_pb2.COMPONENT_STATE_UNSPECIFIED: ComponentState.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value when the component state is not explicitly set. This is the zero value of the enum.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ERROR_LEVEL_CRITICAL","title":"<code>frequenz.api.common.v1.components.data_pb2.ERROR_LEVEL_CRITICAL: ErrorLevel.ValueType</code>  <code>module-attribute</code>","text":"<p>The associated error is critical. The associated component is very likely out-of-order, and needs immediate attention.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ERROR_LEVEL_UNSPECIFIED","title":"<code>frequenz.api.common.v1.components.data_pb2.ERROR_LEVEL_UNSPECIFIED: ErrorLevel.ValueType</code>  <code>module-attribute</code>","text":"<p>Default value. No specific error-level is specified.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ERROR_LEVEL_WARN","title":"<code>frequenz.api.common.v1.components.data_pb2.ERROR_LEVEL_WARN: ErrorLevel.ValueType</code>  <code>module-attribute</code>","text":"<p>The associated error is a warning. Users are advised to take action to prevent the error from becoming critical.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentData","title":"<code>frequenz.api.common.v1.components.data_pb2.ComponentData</code>","text":"<p>             Bases: <code>Message</code></p> <p>ComponentData message aggregates multiple metrics, operational states, and errors, related to a specific microgrid component.</p> <p>Example</p> <p>Example output structure: ``` {   \"metric_samples\": [     {       \"metric\": \"DC_VOLTAGE_V\",       \"value\": {         \"simple_metric\": {           \"sampled_at\": \"2023-10-19T14:15:22.123456789Z\",           \"value\": 48.2,           \"bounds\": [{ \"lower\": 45.0, \"upper\": 50.0 }]         }       }     },     {       \"metric\": \"DC_CURRENT_A\",       \"value\": {         \"aggregated_metric\": {           \"sampled_at\": \"2023-10-19T14:15:22.123456789Z\",           \"avg_value\": 10.2,           \"min_value\": 9.8,           \"max_value\": 10.6,           \"list_values\": [9.8, 10.1, 10.6],           \"bounds\": [             { \"lower\": -20.0, \"upper\": -5.0 },             { \"lower\": 5.0, \"upper\": 20.0 }           ]         }       }     }   ],   \"states\": [     {       \"sampled_at\": \"2023-10-19T14:15:22.123456789Z\",       \"state\": [\"COMPONENT_STATE_CHARGING\"],       \"errors\": []     },     {       \"sampled_at\": \"2023-10-19T14:00:00.000000000Z\",       \"state\": [\"COMPONENT_STATE_ERROR\"],       \"errors\": [\"COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR\"]     }   ] }</p> <p>```</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentData-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentData.metric_samples","title":"<code>metric_samples: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComponentData.MetricSample]</code>  <code>property</code>","text":"<p>List of measurements for a metric of the specific microgrid component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentData.states","title":"<code>states: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComponentData.State]</code>  <code>property</code>","text":"<p>List of states of a specific microgrid component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentData-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentData.MetricSample","title":"<code>MetricSample</code>","text":"<p>             Bases: <code>Message</code></p> <p>Representation of a sampled metric along with its value.</p> Attributes\u00a4 <code>metric: frequenz.api.common.v1.metrics_pb2.Metric.ValueType</code> <code>instance-attribute</code> \u00a4 <p>The metric that was sampled.</p> <code>sample: frequenz.api.common.v1.metrics_pb2.MetricSampleVariant</code> <code>property</code> \u00a4 <p>The value of the sampled metric.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentData.State","title":"<code>State</code>","text":"<p>             Bases: <code>Message</code></p> <p>Representation of a component state and errors.</p> Attributes\u00a4 <code>errors: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComponentError]</code> <code>property</code> \u00a4 <p>List of errors for the microgrid component.</p> <p>Note</p> <p>The list of errors is supposed to be populated only if the component    is in an error state.</p> <p>Note</p> <p>The list will contain unique members. No error will exist twice in    this list.</p> <code>sampled_at: google.protobuf.timestamp_pb2.Timestamp</code> <code>property</code> \u00a4 <p>The time at which the state was sampled.</p> <code>states: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ComponentState.ValueType]</code> <code>property</code> \u00a4 <p>List if states of the microgrid component.</p> <p>Note</p> <p>The list will contain unique members. No state will exist twice in    this list.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentError","title":"<code>frequenz.api.common.v1.components.data_pb2.ComponentError</code>","text":"<p>             Bases: <code>Message</code></p> <p>ComponentError message represents an error that occurred in a microgrid component.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentError-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentError.code","title":"<code>code: global___ComponentErrorCode.ValueType</code>  <code>instance-attribute</code>","text":"<p>The error code.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentError.level","title":"<code>level: global___ErrorLevel.ValueType</code>  <code>instance-attribute</code>","text":"<p>THe error level, indicating if it is a warning or a critical error</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentErrorCode","title":"<code>frequenz.api.common.v1.components.data_pb2.ComponentErrorCode</code>","text":"<p>             Bases: <code>_ComponentErrorCode</code></p> <p>A representation of all possible errors that can occur across all component categories.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ComponentState","title":"<code>frequenz.api.common.v1.components.data_pb2.ComponentState</code>","text":"<p>             Bases: <code>_ComponentState</code></p> <p>Enum to represent the various states that a component can be in. This enum is unified across all component categories for consistency.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2/#frequenz.api.common.v1.components.data_pb2.ErrorLevel","title":"<code>frequenz.api.common.v1.components.data_pb2.ErrorLevel</code>","text":"<p>             Bases: <code>_ErrorLevel</code></p> <p>A representation of all possible error levels that an error can have.</p>"},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2_grpc/","title":"data_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/components/data_pb2_grpc/#frequenz.api.common.v1.components.data_pb2_grpc","title":"<code>frequenz.api.common.v1.components.data_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/","title":"metrics","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/#frequenz.api.common.v1.metrics","title":"<code>frequenz.api.common.v1.metrics</code>","text":"<p>Frequenz Common API definitions for metrics.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/","title":"electrical_pb2","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2","title":"<code>frequenz.api.common.v1.metrics.electrical_pb2</code>","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC","title":"<code>frequenz.api.common.v1.metrics.electrical_pb2.AC</code>","text":"<p>             Bases: <code>Message</code></p> <p>The current state and metrics of the electrical connections to the inverter.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.current","title":"<code>current: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The apparent 3-phase AC current. Positive values represent apparent energy flowing towards the grid connection, and vice versa. In Ampere (A).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.energy_active","title":"<code>energy_active: global___AC.ActiveEnergy</code>  <code>property</code>","text":"<p>The total 3-phase active energy counters for the underlying component's consumption and supply. In Watt-hour (Wh).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.energy_apparent","title":"<code>energy_apparent: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The total 3-phase apparent energy. A positive value represents the net apparent energy supplied to the grid connection, and vice versa. In Volt-Ampere-hour (VAh).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.energy_reactive","title":"<code>energy_reactive: global___AC.ReactiveEnergy</code>  <code>property</code>","text":"<p>The total 3-phase reactive energy counters for the underlying component's capacitive and inductive energy values. In Volt-Ampere reactive hour (VArh). FIXME: ReactiveEnergy says Volt-Ampere-hour (VAh).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.frequency","title":"<code>frequency: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>Overall AC metrics.</p> <p>The AC frequency. In Hertz (Hz).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.harmonics_power_active","title":"<code>harmonics_power_active: global___AC.Harmonics</code>  <code>property</code>","text":"<p>The sums of the harmonics of the instantaneous active power at the component across all 3 phases.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.phase_1","title":"<code>phase_1: global___AC.ACPhase</code>  <code>property</code>","text":"<p>AC metrics for phase/line 1.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.phase_2","title":"<code>phase_2: global___AC.ACPhase</code>  <code>property</code>","text":"<p>AC metrics for phase/line 2.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.phase_3","title":"<code>phase_3: global___AC.ACPhase</code>  <code>property</code>","text":"<p>AC metrics for phase/line 3.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.power_active","title":"<code>power_active: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The total active 3-phase AC active power. +ve power means consumption, away from the grid. -ve power means supply into the grid. In Watt (W).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.power_apparent","title":"<code>power_apparent: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The apparent 3-phase AC power. Positive values represent apparent energy flowing towards the grid connection, and vice versa. In Volt-Ampere (VA).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.power_reactive","title":"<code>power_reactive: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The reactive 3-phase AC power. +ve power means inductive (leading). -ve power means capacitive (lagging). In Volt-Ampere reactive (VAr).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.thd_power_active","title":"<code>thd_power_active: builtins.float</code>  <code>instance-attribute</code>","text":"<p>The sums of the total harmonic distortion of the instantaneous active power at the component across all 3 phases.</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.ACPhase","title":"<code>ACPhase</code>","text":"<p>             Bases: <code>Message</code></p> <p>AC metrics of a single phase.</p> Attributes\u00a4 <code>current: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>AC current. +ve current means consumption, away from the grid. -ve current means supply into the grid. In Ampere (A).</p> <code>energy_active: global___AC.ActiveEnergy</code> <code>property</code> \u00a4 <p>The total active energy counters for the underlying component's consumption and supply. In Watt-hour (Wh).</p> <code>energy_apparent: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The total apparent energy. A Positive value represents the net apparent energy supplied to the grid connection, and vice versa. In Volt-Ampere-hour (VAh).</p> <code>energy_reactive: global___AC.ReactiveEnergy</code> <code>property</code> \u00a4 <p>The total reactive energy counters for the underlying component's capacitive and inductive energy values. In Volt-Ampere reactive hour (VArh).</p> <code>harmonics_power_active: global___AC.Harmonics</code> <code>property</code> \u00a4 <p>Harmonics of the instantaneous active power at the component. In percent (%).</p> <code>power_active: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>AC active power. +ve power means consumption, away from the grid. -ve power means supply into the grid. In Watt (W).</p> <code>power_reactive: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>AC reactive power. +ve power means inductive (leading). -ve power means capacitive (lagging). In Volt-Ampere reactive (VAr).</p> <code>thd_power_active: builtins.float</code> <code>instance-attribute</code> \u00a4 <p>Total harmonic distortion of the instantaneous active power at the component. In percent (%).</p> <code>voltage: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The AC voltage between the line and the neutral wire. In Volt (V).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.ActiveEnergy","title":"<code>ActiveEnergy</code>","text":"<p>             Bases: <code>Message</code></p> <p>The active energy the inverter is consuming or generating.</p> Attributes\u00a4 <code>energy: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The sum of the consumed and delivered energy. This is a signed value in passive sign convention: if more energy is consumed than delivered, this is a -ve number, otherwise +ve. In Watt-hour (Wh).</p> <code>energy_consumed: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The consumed energy. In Watt-hour (Wh).</p> <code>energy_delivered: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The delivered energy. In Watt-hour (Wh).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.Harmonics","title":"<code>Harmonics</code>","text":"<p>             Bases: <code>Message</code></p> <p>The harmonics of the fast Fourier transform of the instantaneous values and its total harmonic distortion. In percent (%).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.AC.ReactiveEnergy","title":"<code>ReactiveEnergy</code>","text":"<p>             Bases: <code>Message</code></p> <p>The reactive energy the inverter is consuming or generating.</p> Attributes\u00a4 <code>energy: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The sum of the capacitive and inductive energy. This is a signed value. If more energy is capacitive than inductive, this is a -ve number, otherwise +ve. In Volt-Ampere-hour (VArh).</p> <code>energy_capacitive: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The capacitive energy. In Volt-Ampere-hour (VArh).</p> <code>energy_inductive: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code> <code>property</code> \u00a4 <p>The inductive energy. In Volt-Ampere-hour (VArh).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.DC","title":"<code>frequenz.api.common.v1.metrics.electrical_pb2.DC</code>","text":"<p>             Bases: <code>Message</code></p> <p>Metrics of a DC electrical connection.</p> Source code in <code>frequenz/api/common/v1/metrics/electrical_pb2.py</code> <pre><code>  _globals['_DC']._serialized_end=342\n  _globals['_AC']._serialized_start=345\n  _globals['_AC']._serialized_end=2675\n  _globals['_AC_ACTIVEENERGY']._serialized_start=1296\n  _globals['_AC_ACTIVEENERGY']._serialized_end=1533\n  _globals['_AC_REACTIVEENERGY']._serialized_start=1536\n  _globals['_AC_REACTIVEENERGY']._serialized_end=1777\n  _globals['_AC_HARMONICS']._serialized_start=1780\n  _globals['_AC_HARMONICS']._serialized_end=2013\n  _globals['_AC_ACPHASE']._serialized_start=2016\n  _globals['_AC_ACPHASE']._serialized_end=2675\n# @@protoc_insertion_point(module_scope)\n</code></pre>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.DC-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.DC.current","title":"<code>current: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The DC current flowing away from the grid connection. In passive sign convention: +ve current means consumption, away from the grid. -ve current means supply into the grid. In Ampere (A).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.DC.power","title":"<code>power: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The DC power flowing away from the grid connection. In passive sign convention: +ve power means consumption, away from the grid. -ve power means supply into the grid. In Watt (W).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2/#frequenz.api.common.v1.metrics.electrical_pb2.DC.voltage","title":"<code>voltage: frequenz.api.common.v1.metrics_pb2.SimpleMetricSample</code>  <code>property</code>","text":"<p>The DC voltage across the component. In Volt (V).</p>"},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2_grpc/","title":"electrical_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/common/v1/metrics/electrical_pb2_grpc/#frequenz.api.common.v1.metrics.electrical_pb2_grpc","title":"<code>frequenz.api.common.v1.metrics.electrical_pb2_grpc</code>","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"}]}